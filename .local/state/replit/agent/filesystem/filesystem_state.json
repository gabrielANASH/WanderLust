{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Wanderlust Travel Platform\n\n## Overview\n\nWanderlust is a modern travel and tourism website that provides travelers with an immersive platform to discover destinations, browse travel packages, and book adventures. The application features a comprehensive travel booking system with destinations management, package categorization, user reviews, and a streamlined booking workflow. Built with a full-stack TypeScript architecture, it emphasizes modern design principles with nature-inspired themes and responsive layouts for optimal user experience across all devices.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management with caching and synchronization\n- **UI Components**: Radix UI primitives with shadcn/ui component library for consistent, accessible design\n- **Styling**: Tailwind CSS with custom design system featuring nature-inspired color palette (forest, ocean, terracotta, sunset themes)\n- **Typography**: Multi-font system using Poppins for headings, Inter for body text, and Playfair Display for elegant accents\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ES modules\n- **API Design**: RESTful API architecture with organized route handlers\n- **Error Handling**: Centralized error handling middleware with structured error responses\n- **Development**: Hot reloading with Vite integration and comprehensive logging middleware\n\n### Data Storage Solutions\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Cloud Provider**: Neon Database serverless PostgreSQL hosting\n- **Schema Management**: Drizzle Kit for migrations and schema management\n- **Data Layer**: In-memory storage implementation with interface for easy database swapping\n- **Type Safety**: Shared schema types between frontend and backend using Zod validation\n\n### Authentication and Authorization\n- **Session Management**: Connect-pg-simple for PostgreSQL-backed session storage\n- **Security**: Prepared for user authentication with secure session handling\n- **Data Validation**: Zod schemas for runtime type checking and API request validation\n\n### Key Features Architecture\n- **Destination Management**: Comprehensive destination catalog with featured destinations, ratings, and regional categorization\n- **Package System**: Travel packages with categorization (adventure, cultural, luxury, family), duration filters, and pricing tiers\n- **Booking System**: Multi-step booking flow with guest management, date selection, and special requests\n- **Review System**: User review and rating system for packages and destinations\n- **Search and Filtering**: Advanced search capabilities with multiple filter criteria\n- **Responsive Design**: Mobile-first approach with adaptive layouts for all screen sizes\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **@vitejs/plugin-react**: React plugin for Vite development environment\n- **wouter**: Lightweight routing library for single-page applications\n- **@tanstack/react-query**: Powerful data synchronization for React applications\n\n### UI and Design System\n- **@radix-ui/react-***: Comprehensive set of unstyled, accessible UI primitives\n- **tailwindcss**: Utility-first CSS framework for rapid UI development\n- **class-variance-authority**: Type-safe variant creation for component styling\n- **lucide-react**: Modern icon library with React components\n\n### Database and Validation\n- **drizzle-orm**: Type-safe SQL ORM for TypeScript with PostgreSQL support\n- **@neondatabase/serverless**: Serverless PostgreSQL database client\n- **zod**: TypeScript-first schema validation library\n- **drizzle-zod**: Integration package for Drizzle ORM and Zod validation\n\n### Development and Build Tools\n- **typescript**: Static type checking for JavaScript applications\n- **vite**: Fast build tool and development server\n- **esbuild**: Fast JavaScript bundler for production builds\n- **tsx**: TypeScript execution environment for Node.js\n\n### Additional Utilities\n- **date-fns**: Modern JavaScript date utility library\n- **clsx**: Utility for constructing className strings conditionally\n- **nanoid**: Tiny, secure, URL-friendly unique string ID generator\n- **embla-carousel-react**: Modern carousel component for React applications","size_bytes":4533},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // Travel theme colors\n        forest: \"var(--forest)\",\n        terracotta: \"var(--terracotta)\",\n        ocean: \"var(--ocean)\",\n        sand: \"var(--sand)\",\n        \"warm-white\": \"var(--warm-white)\",\n        sunset: \"var(--sunset)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        poppins: [\"Poppins\", \"sans-serif\"],\n        inter: [\"Inter\", \"sans-serif\"],\n        playfair: [\"Playfair Display\", \"serif\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        fadeIn: {\n          from: { \n            opacity: \"0\", \n            transform: \"translateY(20px)\" \n          },\n          to: { \n            opacity: \"1\", \n            transform: \"translateY(0)\" \n          },\n        },\n        slideUp: {\n          from: { \n            opacity: \"0\", \n            transform: \"translateY(30px)\" \n          },\n          to: { \n            opacity: \"1\", \n            transform: \"translateY(0)\" \n          },\n        },\n        float: {\n          \"0%, 100%\": { \n            transform: \"translateY(0px)\" \n          },\n          \"50%\": { \n            transform: \"translateY(-10px)\" \n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fadeIn 0.6s ease-in-out\",\n        \"slide-up\": \"slideUp 0.8s ease-out\",\n        \"float\": \"float 3s ease-in-out infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3923},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { z } from \"zod\";\nimport { insertBookingSchema, insertReviewSchema } from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Destinations API\n  app.get(\"/api/destinations\", async (req, res) => {\n    try {\n      const destinations = await storage.getDestinations();\n      res.json(destinations);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch destinations\" });\n    }\n  });\n\n  app.get(\"/api/destinations/featured\", async (req, res) => {\n    try {\n      const destinations = await storage.getFeaturedDestinations();\n      res.json(destinations);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch featured destinations\" });\n    }\n  });\n\n  app.get(\"/api/destinations/:id\", async (req, res) => {\n    try {\n      const destination = await storage.getDestination(req.params.id);\n      if (!destination) {\n        return res.status(404).json({ message: \"Destination not found\" });\n      }\n      res.json(destination);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch destination\" });\n    }\n  });\n\n  // Packages API\n  app.get(\"/api/packages\", async (req, res) => {\n    try {\n      const { category, destination } = req.query;\n      const filters = {\n        category: category as string,\n        destination: destination as string,\n      };\n      const packages = await storage.getPackages(filters);\n      res.json(packages);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch packages\" });\n    }\n  });\n\n  app.get(\"/api/packages/featured\", async (req, res) => {\n    try {\n      const packages = await storage.getFeaturedPackages();\n      res.json(packages);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch featured packages\" });\n    }\n  });\n\n  app.get(\"/api/packages/:id\", async (req, res) => {\n    try {\n      const packageData = await storage.getPackage(req.params.id);\n      if (!packageData) {\n        return res.status(404).json({ message: \"Package not found\" });\n      }\n      res.json(packageData);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch package\" });\n    }\n  });\n\n  // Bookings API\n  app.post(\"/api/bookings\", async (req, res) => {\n    try {\n      const validatedData = insertBookingSchema.parse(req.body);\n      const booking = await storage.createBooking(validatedData);\n      res.status(201).json(booking);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid booking data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create booking\" });\n    }\n  });\n\n  app.get(\"/api/bookings\", async (req, res) => {\n    try {\n      const { userId } = req.query;\n      const bookings = await storage.getBookings(userId as string);\n      res.json(bookings);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch bookings\" });\n    }\n  });\n\n  app.get(\"/api/bookings/:id\", async (req, res) => {\n    try {\n      const booking = await storage.getBooking(req.params.id);\n      if (!booking) {\n        return res.status(404).json({ message: \"Booking not found\" });\n      }\n      res.json(booking);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch booking\" });\n    }\n  });\n\n  // Reviews API\n  app.get(\"/api/packages/:packageId/reviews\", async (req, res) => {\n    try {\n      const reviews = await storage.getReviews(req.params.packageId);\n      res.json(reviews);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch reviews\" });\n    }\n  });\n\n  app.post(\"/api/packages/:packageId/reviews\", async (req, res) => {\n    try {\n      const validatedData = insertReviewSchema.parse({\n        ...req.body,\n        packageId: req.params.packageId,\n      });\n      const review = await storage.createReview(validatedData);\n      res.status(201).json(review);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid review data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create review\" });\n    }\n  });\n\n  // Search API\n  app.get(\"/api/search\", async (req, res) => {\n    try {\n      const { destination, checkIn, checkOut, guests, category } = req.query;\n      \n      // For now, return filtered packages based on available filters\n      const filters: any = {};\n      if (category) filters.category = category as string;\n      \n      const packages = await storage.getPackages(filters);\n      \n      // In a real implementation, you would filter by dates, destination, etc.\n      res.json({\n        packages,\n        totalResults: packages.length,\n        searchParams: { destination, checkIn, checkOut, guests, category }\n      });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to perform search\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":5102},"server/storage.ts":{"content":"import { \n  type User, \n  type InsertUser, \n  type Destination, \n  type InsertDestination,\n  type Package,\n  type InsertPackage,\n  type Booking,\n  type InsertBooking,\n  type Review,\n  type InsertReview,\n  type PackageWithDestination\n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Destinations\n  getDestinations(): Promise<Destination[]>;\n  getFeaturedDestinations(): Promise<Destination[]>;\n  getDestination(id: string): Promise<Destination | undefined>;\n  createDestination(destination: InsertDestination): Promise<Destination>;\n  \n  // Packages\n  getPackages(filters?: {category?: string, destination?: string}): Promise<PackageWithDestination[]>;\n  getFeaturedPackages(): Promise<PackageWithDestination[]>;\n  getPackage(id: string): Promise<PackageWithDestination | undefined>;\n  createPackage(pkg: InsertPackage): Promise<Package>;\n  \n  // Bookings\n  getBookings(userId?: string): Promise<Booking[]>;\n  getBooking(id: string): Promise<Booking | undefined>;\n  createBooking(booking: InsertBooking): Promise<Booking>;\n  \n  // Reviews\n  getReviews(packageId: string): Promise<Review[]>;\n  createReview(review: InsertReview): Promise<Review>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private destinations: Map<string, Destination>;\n  private packages: Map<string, Package>;\n  private bookings: Map<string, Booking>;\n  private reviews: Map<string, Review>;\n\n  constructor() {\n    this.users = new Map();\n    this.destinations = new Map();\n    this.packages = new Map();\n    this.bookings = new Map();\n    this.reviews = new Map();\n    \n    this.seedData();\n  }\n\n  private seedData() {\n    // Seed destinations\n    const destinations: Destination[] = [\n      {\n        id: \"dest-1\",\n        name: \"Maldives\",\n        country: \"Maldives\",\n        region: \"Asia\",\n        description: \"Tropical paradise with crystal clear waters and pristine beaches\",\n        imageUrl: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        priceFrom: \"2899\",\n        rating: \"4.9\",\n        reviewCount: 2100,\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"dest-2\",\n        name: \"Swiss Alps\",\n        country: \"Switzerland\",\n        region: \"Europe\",\n        description: \"Majestic mountain peaks and alpine adventures\",\n        imageUrl: \"https://pixabay.com/get/g9b9e03f78cd89e14db484c867e720068c21d17fc8c74e2c1d0ede2ee94f266c05ebcc9651eb33890de6bf03a08ce46c367b8d7d34cb2637b65e845aee639b67b_1280.jpg\",\n        priceFrom: \"1599\",\n        rating: \"4.8\",\n        reviewCount: 1500,\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"dest-3\",\n        name: \"Kyoto\",\n        country: \"Japan\",\n        region: \"Asia\",\n        description: \"Ancient temples and traditional Japanese culture\",\n        imageUrl: \"https://images.unsplash.com/photo-1493976040374-85c8e12f0c0e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        priceFrom: \"1299\",\n        rating: \"4.7\",\n        reviewCount: 987,\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"dest-4\",\n        name: \"Kenya\",\n        country: \"Kenya\",\n        region: \"Africa\",\n        description: \"African safari adventure with incredible wildlife\",\n        imageUrl: \"https://images.unsplash.com/photo-1516426122078-c23e76319801?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        priceFrom: \"3499\",\n        rating: \"4.9\",\n        reviewCount: 756,\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"dest-5\",\n        name: \"Machu Picchu\",\n        country: \"Peru\",\n        region: \"South America\",\n        description: \"Ancient Incan ruins in the breathtaking Andes\",\n        imageUrl: \"https://images.unsplash.com/photo-1587595431973-160d0d94add1?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        priceFrom: \"1899\",\n        rating: \"4.8\",\n        reviewCount: 1200,\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"dest-6\",\n        name: \"Iceland\",\n        country: \"Iceland\",\n        region: \"Europe\",\n        description: \"Northern lights and dramatic volcanic landscapes\",\n        imageUrl: \"https://images.unsplash.com/photo-1531366936337-7c912a4589a7?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        priceFrom: \"2199\",\n        rating: \"4.9\",\n        reviewCount: 892,\n        featured: true,\n        createdAt: new Date(),\n      }\n    ];\n\n    destinations.forEach(dest => this.destinations.set(dest.id, dest));\n\n    // Seed packages\n    const packages: Package[] = [\n      {\n        id: \"pkg-1\",\n        title: \"Colorado River Expedition\",\n        description: \"5-day white water rafting and camping adventure through the Grand Canyon\",\n        destinationId: null,\n        category: \"adventure\",\n        duration: 5,\n        maxGuests: 12,\n        price: \"1899\",\n        imageUrl: \"https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        rating: \"4.8\",\n        reviewCount: 124,\n        inclusions: [\"Professional guide\", \"All equipment\", \"Camping gear\", \"Meals\"],\n        itinerary: [\n          { day: 1, title: \"Arrival & Setup\", description: \"Meet your guide and set up camp\" },\n          { day: 2, title: \"Rapids Training\", description: \"Learn rafting techniques\" },\n          { day: 3, title: \"Canyon Adventure\", description: \"Navigate exciting rapids\" },\n          { day: 4, title: \"Wilderness Camping\", description: \"Camp under the stars\" },\n          { day: 5, title: \"Final Rapids\", description: \"Complete the expedition\" }\n        ],\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"pkg-2\",\n        title: \"Greek Islands Discovery\",\n        description: \"10-day cultural journey through Santorini, Mykonos, and Crete with local guides\",\n        destinationId: null,\n        category: \"cultural\",\n        duration: 10,\n        maxGuests: 18,\n        price: \"2799\",\n        imageUrl: \"https://images.unsplash.com/photo-1533105079780-92b9be482077?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        rating: \"4.9\",\n        reviewCount: 89,\n        inclusions: [\"Boutique hotels\", \"Local guides\", \"Island transfers\", \"Traditional meals\"],\n        itinerary: [\n          { day: 1, title: \"Athens Arrival\", description: \"Explore the Acropolis\" },\n          { day: 2, title: \"Santorini\", description: \"Famous blue domes and sunset\" },\n          { day: 3, title: \"Wine Tasting\", description: \"Local vineyard tours\" },\n          { day: 4, title: \"Mykonos\", description: \"Charming windmills and beaches\" },\n          { day: 5, title: \"Crete Adventure\", description: \"Minoan palace exploration\" }\n        ],\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"pkg-3\",\n        title: \"Maldives Paradise Retreat\",\n        description: \"7-day luxury escape in overwater villas with private butler service\",\n        destinationId: \"dest-1\",\n        category: \"luxury\",\n        duration: 7,\n        maxGuests: 2,\n        price: \"4999\",\n        imageUrl: \"https://images.unsplash.com/photo-1540979388789-6cee28a1cdc9?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        rating: \"5.0\",\n        reviewCount: 67,\n        inclusions: [\"Overwater villa\", \"Private butler\", \"Spa treatments\", \"Fine dining\"],\n        itinerary: [\n          { day: 1, title: \"Arrival\", description: \"Private seaplane transfer\" },\n          { day: 2, title: \"Spa Day\", description: \"Full day wellness treatments\" },\n          { day: 3, title: \"Snorkeling\", description: \"Explore coral reefs\" },\n          { day: 4, title: \"Sunset Cruise\", description: \"Private yacht experience\" },\n          { day: 5, title: \"Island Hopping\", description: \"Visit local islands\" }\n        ],\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"pkg-4\",\n        title: \"Tanzania Family Safari\",\n        description: \"8-day family-friendly safari with expert guides and comfortable lodges\",\n        destinationId: \"dest-4\",\n        category: \"family\",\n        duration: 8,\n        maxGuests: 8,\n        price: \"3299\",\n        imageUrl: \"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\",\n        rating: \"4.7\",\n        reviewCount: 156,\n        inclusions: [\"Safari vehicle\", \"Expert guide\", \"Luxury lodge\", \"All meals\"],\n        itinerary: [\n          { day: 1, title: \"Arrival\", description: \"Welcome to Tanzania\" },\n          { day: 2, title: \"Serengeti\", description: \"Big Five wildlife viewing\" },\n          { day: 3, title: \"Ngorongoro\", description: \"Crater exploration\" },\n          { day: 4, title: \"Cultural Visit\", description: \"Maasai village experience\" },\n          { day: 5, title: \"Game Drive\", description: \"Morning wildlife safari\" }\n        ],\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"pkg-5\",\n        title: \"Patagonia Trekking\",\n        description: \"12-day guided trekking adventure through Torres del Paine National Park\",\n        destinationId: null,\n        category: \"adventure\",\n        duration: 12,\n        maxGuests: 10,\n        price: \"2599\",\n        imageUrl: \"https://pixabay.com/get/gf7b0d7ac0e0a412fb9a005c17a0d52b0e31648749b19bc3b4451718366ffb1f4285db6c4180b6453fd7bf9d2d55c003d14c3896211bdfdc938bda3b5f0bfec45_1280.jpg\",\n        rating: \"4.6\",\n        reviewCount: 203,\n        inclusions: [\"Trekking guide\", \"Camping equipment\", \"Meals\", \"Permits\"],\n        itinerary: [\n          { day: 1, title: \"Base Camp\", description: \"Equipment check and preparation\" },\n          { day: 2, title: \"Torres Trek\", description: \"Iconic towers hike\" },\n          { day: 3, title: \"French Valley\", description: \"Dramatic valley views\" },\n          { day: 4, title: \"Grey Glacier\", description: \"Glacier boat tour\" },\n          { day: 5, title: \"Wildlife Day\", description: \"Puma tracking expedition\" }\n        ],\n        featured: true,\n        createdAt: new Date(),\n      },\n      {\n        id: \"pkg-6\",\n        title: \"Buddhist Temples Tour\",\n        description: \"14-day spiritual journey through ancient temples of Myanmar and Thailand\",\n        destinationId: null,\n        category: \"cultural\",\n        duration: 14,\n        maxGuests: 15,\n        price: \"2199\",\n        imageUrl: \"https://pixabay.com/get/g26eab73116eb381267a3be9174a17604e30b2c5d67c50a20586927149c01bf497b1827b8b550ec725924131350d4b960184074a5d8ca09e31251ea6d1de42961_1280.jpg\",\n        rating: \"4.8\",\n        reviewCount: 94,\n        inclusions: [\"Temple guides\", \"Cultural experiences\", \"Traditional accommodation\", \"Vegetarian meals\"],\n        itinerary: [\n          { day: 1, title: \"Bangkok\", description: \"Golden temple visits\" },\n          { day: 2, title: \"Meditation\", description: \"Morning meditation session\" },\n          { day: 3, title: \"Chiang Mai\", description: \"Mountain temple trek\" },\n          { day: 4, title: \"Myanmar\", description: \"Ancient Bagan temples\" },\n          { day: 5, title: \"Spiritual Practice\", description: \"Buddhist ceremony participation\" }\n        ],\n        featured: true,\n        createdAt: new Date(),\n      }\n    ];\n\n    packages.forEach(pkg => this.packages.set(pkg.id, pkg));\n  }\n\n  // Users\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(user => user.email === email);\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id, createdAt: new Date() };\n    this.users.set(id, user);\n    return user;\n  }\n\n  // Destinations\n  async getDestinations(): Promise<Destination[]> {\n    return Array.from(this.destinations.values());\n  }\n\n  async getFeaturedDestinations(): Promise<Destination[]> {\n    return Array.from(this.destinations.values()).filter(dest => dest.featured);\n  }\n\n  async getDestination(id: string): Promise<Destination | undefined> {\n    return this.destinations.get(id);\n  }\n\n  async createDestination(insertDestination: InsertDestination): Promise<Destination> {\n    const id = randomUUID();\n    const destination: Destination = { ...insertDestination, id, createdAt: new Date() };\n    this.destinations.set(id, destination);\n    return destination;\n  }\n\n  // Packages\n  async getPackages(filters?: {category?: string, destination?: string}): Promise<PackageWithDestination[]> {\n    let packages = Array.from(this.packages.values());\n    \n    if (filters?.category && filters.category !== 'all') {\n      packages = packages.filter(pkg => pkg.category === filters.category);\n    }\n    \n    if (filters?.destination) {\n      packages = packages.filter(pkg => pkg.destinationId === filters.destination);\n    }\n    \n    return packages.map(pkg => ({\n      ...pkg,\n      destination: pkg.destinationId ? this.destinations.get(pkg.destinationId) : undefined\n    }));\n  }\n\n  async getFeaturedPackages(): Promise<PackageWithDestination[]> {\n    const packages = Array.from(this.packages.values()).filter(pkg => pkg.featured);\n    return packages.map(pkg => ({\n      ...pkg,\n      destination: pkg.destinationId ? this.destinations.get(pkg.destinationId) : undefined\n    }));\n  }\n\n  async getPackage(id: string): Promise<PackageWithDestination | undefined> {\n    const pkg = this.packages.get(id);\n    if (!pkg) return undefined;\n    \n    return {\n      ...pkg,\n      destination: pkg.destinationId ? this.destinations.get(pkg.destinationId) : undefined\n    };\n  }\n\n  async createPackage(insertPackage: InsertPackage): Promise<Package> {\n    const id = randomUUID();\n    const pkg: Package = { ...insertPackage, id, createdAt: new Date() };\n    this.packages.set(id, pkg);\n    return pkg;\n  }\n\n  // Bookings\n  async getBookings(userId?: string): Promise<Booking[]> {\n    const bookings = Array.from(this.bookings.values());\n    return userId ? bookings.filter(booking => booking.userId === userId) : bookings;\n  }\n\n  async getBooking(id: string): Promise<Booking | undefined> {\n    return this.bookings.get(id);\n  }\n\n  async createBooking(insertBooking: InsertBooking): Promise<Booking> {\n    const id = randomUUID();\n    const booking: Booking = { ...insertBooking, id, createdAt: new Date() };\n    this.bookings.set(id, booking);\n    return booking;\n  }\n\n  // Reviews\n  async getReviews(packageId: string): Promise<Review[]> {\n    return Array.from(this.reviews.values()).filter(review => review.packageId === packageId);\n  }\n\n  async createReview(insertReview: InsertReview): Promise<Review> {\n    const id = randomUUID();\n    const review: Review = { ...insertReview, id, createdAt: new Date() };\n    this.reviews.set(id, review);\n    return review;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":15086},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, decimal, boolean, timestamp, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  email: text(\"email\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  firstName: text(\"first_name\"),\n  lastName: text(\"last_name\"),\n  phone: text(\"phone\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const destinations = pgTable(\"destinations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  country: text(\"country\").notNull(),\n  region: text(\"region\").notNull(),\n  description: text(\"description\").notNull(),\n  imageUrl: text(\"image_url\").notNull(),\n  priceFrom: decimal(\"price_from\", { precision: 10, scale: 2 }).notNull(),\n  rating: decimal(\"rating\", { precision: 3, scale: 2 }).default(\"0\"),\n  reviewCount: integer(\"review_count\").default(0),\n  featured: boolean(\"featured\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const packages = pgTable(\"packages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  destinationId: varchar(\"destination_id\").references(() => destinations.id),\n  category: text(\"category\").notNull(), // adventure, cultural, luxury, family\n  duration: integer(\"duration\").notNull(), // days\n  maxGuests: integer(\"max_guests\").notNull(),\n  price: decimal(\"price\", { precision: 10, scale: 2 }).notNull(),\n  imageUrl: text(\"image_url\").notNull(),\n  rating: decimal(\"rating\", { precision: 3, scale: 2 }).default(\"0\"),\n  reviewCount: integer(\"review_count\").default(0),\n  inclusions: jsonb(\"inclusions\").$type<string[]>(),\n  itinerary: jsonb(\"itinerary\").$type<{day: number, title: string, description: string}[]>(),\n  featured: boolean(\"featured\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const bookings = pgTable(\"bookings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  packageId: varchar(\"package_id\").references(() => packages.id),\n  guestCount: integer(\"guest_count\").notNull(),\n  departureDate: timestamp(\"departure_date\").notNull(),\n  totalPrice: decimal(\"total_price\", { precision: 10, scale: 2 }).notNull(),\n  status: text(\"status\").default(\"pending\"), // pending, confirmed, cancelled\n  specialRequests: text(\"special_requests\"),\n  paymentMethod: text(\"payment_method\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const reviews = pgTable(\"reviews\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  packageId: varchar(\"package_id\").references(() => packages.id),\n  rating: integer(\"rating\").notNull(),\n  title: text(\"title\"),\n  comment: text(\"comment\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertDestinationSchema = createInsertSchema(destinations).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertPackageSchema = createInsertSchema(packages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertBookingSchema = createInsertSchema(bookings).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertReviewSchema = createInsertSchema(reviews).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\n\nexport type Destination = typeof destinations.$inferSelect;\nexport type InsertDestination = z.infer<typeof insertDestinationSchema>;\n\nexport type Package = typeof packages.$inferSelect;\nexport type InsertPackage = z.infer<typeof insertPackageSchema>;\n\nexport type Booking = typeof bookings.$inferSelect;\nexport type InsertBooking = z.infer<typeof insertBookingSchema>;\n\nexport type Review = typeof reviews.$inferSelect;\nexport type InsertReview = z.infer<typeof insertReviewSchema>;\n\n// Extended types for joined data\nexport type PackageWithDestination = Package & {\n  destination?: Destination;\n};\n\nexport type BookingWithDetails = Booking & {\n  package?: Package;\n  user?: User;\n};\n","size_bytes":4506},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport Destinations from \"@/pages/destinations\";\nimport Packages from \"@/pages/packages\";\nimport PackageDetails from \"@/pages/package-details\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/destinations\" component={Destinations} />\n      <Route path=\"/packages\" component={Packages} />\n      <Route path=\"/packages/:id\" component={PackageDetails} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1023},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700;800&family=Inter:wght@300;400;500;600&family=Playfair+Display:wght@400;500;600&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(48, 11%, 98%);\n  --foreground: hsl(210, 25%, 7.8431%);\n  --card: hsl(48, 11%, 98%);\n  --card-foreground: hsl(210, 25%, 7.8431%);\n  --popover: hsl(48, 11%, 98%);\n  --popover-foreground: hsl(210, 25%, 7.8431%);\n  --primary: hsl(137, 24%, 32%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(201, 37%, 44%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(210, 16%, 92%);\n  --muted-foreground: hsl(210, 25%, 7.8431%);\n  --accent: hsl(25, 76%, 47%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 16%, 90%);\n  --input: hsl(210, 16%, 95%);\n  --ring: hsl(137, 24%, 32%);\n  --chart-1: hsl(137, 24%, 32%);\n  --chart-2: hsl(201, 37%, 44%);\n  --chart-3: hsl(25, 76%, 47%);\n  --chart-4: hsl(33, 46%, 58%);\n  --chart-5: hsl(42, 87%, 55%);\n  --sidebar: hsl(48, 11%, 98%);\n  --sidebar-foreground: hsl(210, 25%, 7.8431%);\n  --sidebar-primary: hsl(137, 24%, 32%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(210, 16%, 92%);\n  --sidebar-accent-foreground: hsl(137, 24%, 32%);\n  --sidebar-border: hsl(210, 16%, 90%);\n  --sidebar-ring: hsl(137, 24%, 32%);\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: 'Playfair Display', serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(137, 24%, 32% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(137, 24%, 32% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(137, 24%, 32% / 0.00), 0px 1px 2px -1px hsl(137, 24%, 32% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(137, 24%, 32% / 0.00), 0px 1px 2px -1px hsl(137, 24%, 32% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(137, 24%, 32% / 0.00), 0px 2px 4px -1px hsl(137, 24%, 32% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(137, 24%, 32% / 0.00), 0px 4px 6px -1px hsl(137, 24%, 32% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(137, 24%, 32% / 0.00), 0px 8px 10px -1px hsl(137, 24%, 32% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(137, 24%, 32% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n  \n  /* Travel Theme Colors */\n  --forest: hsl(137, 24%, 32%);\n  --terracotta: hsl(25, 76%, 47%);\n  --ocean: hsl(201, 37%, 44%);\n  --sand: hsl(33, 46%, 58%);\n  --warm-white: hsl(48, 11%, 98%);\n  --sunset: hsl(42, 87%, 55%);\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(200, 6.6667%, 91.1765%);\n  --card: hsl(228, 9.8039%, 10%);\n  --card-foreground: hsl(0, 0%, 85.0980%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(200, 6.6667%, 91.1765%);\n  --primary: hsl(137, 24%, 42%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(201, 37%, 54%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(0, 0%, 9.4118%);\n  --muted-foreground: hsl(210, 3.3898%, 46.2745%);\n  --accent: hsl(25, 76%, 57%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5.2632%, 14.9020%);\n  --input: hsl(207.6923, 27.6596%, 18.4314%);\n  --ring: hsl(137, 24%, 42%);\n  --chart-1: hsl(137, 24%, 42%);\n  --chart-2: hsl(201, 37%, 54%);\n  --chart-3: hsl(25, 76%, 57%);\n  --chart-4: hsl(33, 46%, 68%);\n  --chart-5: hsl(42, 87%, 65%);\n  --sidebar: hsl(228, 9.8039%, 10%);\n  --sidebar-foreground: hsl(0, 0%, 85.0980%);\n  --sidebar-primary: hsl(137, 24%, 42%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(205.7143, 70%, 7.8431%);\n  --sidebar-accent-foreground: hsl(137, 24%, 42%);\n  --sidebar-border: hsl(205.7143, 15.7895%, 26.0784%);\n  --sidebar-ring: hsl(137, 24%, 42%);\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: 'Playfair Display', serif;\n  --font-mono: Menlo, monospace;\n  \n  /* Travel Theme Colors - Dark Mode */\n  --forest: hsl(137, 24%, 42%);\n  --terracotta: hsl(25, 76%, 57%);\n  --ocean: hsl(201, 37%, 54%);\n  --sand: hsl(33, 46%, 68%);\n  --warm-white: hsl(228, 9.8039%, 10%);\n  --sunset: hsl(42, 87%, 65%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n  \n  .font-poppins {\n    font-family: 'Poppins', sans-serif;\n  }\n  \n  .font-inter {\n    font-family: 'Inter', sans-serif;\n  }\n  \n  .font-playfair {\n    font-family: 'Playfair Display', serif;\n  }\n}\n\n@layer utilities {\n  .text-forest {\n    color: var(--forest);\n  }\n  \n  .text-terracotta {\n    color: var(--terracotta);\n  }\n  \n  .text-ocean {\n    color: var(--ocean);\n  }\n  \n  .text-sand {\n    color: var(--sand);\n  }\n  \n  .text-warm-white {\n    color: var(--warm-white);\n  }\n  \n  .text-sunset {\n    color: var(--sunset);\n  }\n  \n  .bg-forest {\n    background-color: var(--forest);\n  }\n  \n  .bg-terracotta {\n    background-color: var(--terracotta);\n  }\n  \n  .bg-ocean {\n    background-color: var(--ocean);\n  }\n  \n  .bg-sand {\n    background-color: var(--sand);\n  }\n  \n  .bg-warm-white {\n    background-color: var(--warm-white);\n  }\n  \n  .bg-sunset {\n    background-color: var(--sunset);\n  }\n  \n  .border-forest {\n    border-color: var(--forest);\n  }\n  \n  .border-terracotta {\n    border-color: var(--terracotta);\n  }\n  \n  .border-ocean {\n    border-color: var(--ocean);\n  }\n  \n  .border-sand {\n    border-color: var(--sand);\n  }\n  \n  .border-sunset {\n    border-color: var(--sunset);\n  }\n  \n  .hero-overlay {\n    background: linear-gradient(135deg, rgba(47, 82, 51, 0.7) 0%, rgba(74, 144, 164, 0.6) 100%);\n  }\n  \n  .search-shadow {\n    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  }\n  \n  .animate-fade-in {\n    animation: fadeIn 0.6s ease-in-out;\n  }\n  \n  .animate-slide-up {\n    animation: slideUp 0.8s ease-out;\n  }\n  \n  .animate-float {\n    animation: float 3s ease-in-out infinite;\n  }\n}\n\n@keyframes fadeIn {\n  from { \n    opacity: 0; \n    transform: translateY(20px); \n  }\n  to { \n    opacity: 1; \n    transform: translateY(0); \n  }\n}\n\n@keyframes slideUp {\n  from { \n    opacity: 0; \n    transform: translateY(30px); \n  }\n  to { \n    opacity: 1; \n    transform: translateY(0); \n  }\n}\n\n@keyframes float {\n  0%, 100% { \n    transform: translateY(0px); \n  }\n  50% { \n    transform: translateY(-10px); \n  }\n}\n","size_bytes":6392},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/booking-form.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Lock, CreditCard } from \"lucide-react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\n\nexport default function BookingForm() {\n  const { toast } = useToast();\n  const [formData, setFormData] = useState({\n    packageId: \"pkg-2\", // Default to Greek Islands\n    guestCount: 2,\n    departureDate: \"\",\n    specialRequests: \"\",\n    paymentMethod: \"\",\n  });\n\n  const bookingMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await apiRequest(\"POST\", \"/api/bookings\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Booking Confirmed!\",\n        description: \"Your adventure booking has been successfully confirmed.\",\n      });\n      // Reset form\n      setFormData({\n        packageId: \"pkg-2\",\n        guestCount: 2,\n        departureDate: \"\",\n        specialRequests: \"\",\n        paymentMethod: \"\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Booking Failed\",\n        description: \"There was an error processing your booking. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    const bookingData = {\n      ...formData,\n      userId: \"temp-user-id\", // In real app, get from auth context\n      totalPrice: \"5996.00\", // Calculate based on package and guests\n      departureDate: new Date(formData.departureDate),\n    };\n    \n    bookingMutation.mutate(bookingData);\n  };\n\n  const calculateTotal = () => {\n    const basePrice = 2799; // Greek Islands base price\n    const guestMultiplier = formData.guestCount;\n    const insurance = 99;\n    const taxes = 299;\n    return (basePrice * guestMultiplier) + insurance + taxes;\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto bg-gray-50 rounded-2xl p-8\">\n      <h3 className=\"font-poppins font-semibold text-2xl text-center mb-8\">Book Your Adventure</h3>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-6\" data-testid=\"booking-form\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <Label htmlFor=\"package\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Selected Package\n            </Label>\n            <Select value={formData.packageId} onValueChange={(value) => setFormData(prev => ({ ...prev, packageId: value }))}>\n              <SelectTrigger data-testid=\"select-package\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"pkg-2\">Greek Islands Discovery - $2,799</SelectItem>\n                <SelectItem value=\"pkg-3\">Maldives Paradise Retreat - $4,999</SelectItem>\n                <SelectItem value=\"pkg-1\">Colorado River Expedition - $1,899</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div>\n            <Label htmlFor=\"guests\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Number of Travelers\n            </Label>\n            <Select value={formData.guestCount.toString()} onValueChange={(value) => setFormData(prev => ({ ...prev, guestCount: parseInt(value) }))}>\n              <SelectTrigger data-testid=\"select-travelers\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"1\">1 Adult</SelectItem>\n                <SelectItem value=\"2\">2 Adults</SelectItem>\n                <SelectItem value=\"3\">2 Adults, 1 Child</SelectItem>\n                <SelectItem value=\"4\">2 Adults, 2 Children</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <Label htmlFor=\"departure\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Departure Date\n            </Label>\n            <Input\n              id=\"departure\"\n              type=\"date\"\n              value={formData.departureDate}\n              onChange={(e) => setFormData(prev => ({ ...prev, departureDate: e.target.value }))}\n              className=\"border border-gray-300 focus:border-forest\"\n              data-testid=\"input-departure-date\"\n              required\n            />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"requests\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Special Requests\n            </Label>\n            <Select value={formData.specialRequests} onValueChange={(value) => setFormData(prev => ({ ...prev, specialRequests: value }))}>\n              <SelectTrigger data-testid=\"select-special-requests\">\n                <SelectValue placeholder=\"None\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"\">None</SelectItem>\n                <SelectItem value=\"dietary\">Dietary Requirements</SelectItem>\n                <SelectItem value=\"accessibility\">Accessibility Needs</SelectItem>\n                <SelectItem value=\"anniversary\">Anniversary Celebration</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n        \n        {/* Payment Methods */}\n        <div>\n          <Label className=\"block text-sm font-semibold text-gray-700 mb-4\">Payment Method</Label>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {['visa', 'mastercard', 'paypal', 'apple-pay'].map((method) => (\n              <label key={method} className=\"flex items-center justify-center p-4 border-2 border-gray-300 rounded-lg cursor-pointer hover:border-forest transition-colors\">\n                <input \n                  type=\"radio\" \n                  name=\"payment\" \n                  value={method}\n                  checked={formData.paymentMethod === method}\n                  onChange={(e) => setFormData(prev => ({ ...prev, paymentMethod: e.target.value }))}\n                  className=\"sr-only\" \n                />\n                <CreditCard className=\"h-8 w-8 text-gray-600\" />\n              </label>\n            ))}\n          </div>\n        </div>\n        \n        {/* Price Summary */}\n        <Card className=\"border border-gray-200\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Booking Summary</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            <div className=\"flex justify-between\">\n              <span>Greek Islands Discovery ({formData.guestCount} adults)</span>\n              <span>${(2799 * formData.guestCount).toLocaleString()}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span>Travel Insurance</span>\n              <span>$99</span>\n            </div>\n            <div className=\"flex justify-between text-sm text-gray-600\">\n              <span>Taxes & Fees</span>\n              <span>$299</span>\n            </div>\n            <div className=\"border-t pt-2 mt-2\">\n              <div className=\"flex justify-between font-bold text-lg\">\n                <span>Total</span>\n                <span className=\"text-forest\" data-testid=\"booking-total\">\n                  ${calculateTotal().toLocaleString()}\n                </span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Button \n          type=\"submit\" \n          disabled={bookingMutation.isPending}\n          className=\"w-full bg-forest text-white py-4 text-lg font-semibold hover:bg-green-800 transition-colors\"\n          data-testid=\"submit-booking\"\n        >\n          <Lock className=\"mr-2 h-5 w-5\" />\n          {bookingMutation.isPending ? \"Processing...\" : `Secure Booking - $${calculateTotal().toLocaleString()}`}\n        </Button>\n      </form>\n    </div>\n  );\n}\n","size_bytes":8279},"client/src/components/destination-card.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Star, MapPin } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport type { Destination } from \"@shared/schema\";\n\ninterface DestinationCardProps {\n  destination: Destination;\n}\n\nexport default function DestinationCard({ destination }: DestinationCardProps) {\n  return (\n    <Link href={`/destinations/${destination.id}`}>\n      <Card className=\"group cursor-pointer transform hover:scale-105 transition-all duration-300 overflow-hidden rounded-2xl shadow-lg hover:shadow-xl\">\n        <div className=\"relative overflow-hidden\">\n          <img\n            src={destination.imageUrl}\n            alt={destination.name}\n            className=\"w-full h-80 object-cover group-hover:scale-110 transition-transform duration-500\"\n            loading=\"lazy\"\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent\" />\n          <div className=\"absolute bottom-6 left-6 text-white\">\n            <div className=\"flex items-center mb-2\">\n              <MapPin className=\"h-4 w-4 mr-1\" />\n              <span className=\"text-sm\">{destination.country}</span>\n            </div>\n            <h3 className=\"font-poppins font-semibold text-2xl mb-2\">{destination.name}</h3>\n            <p className=\"text-white/90 mb-2\">From ${destination.priceFrom} per person</p>\n            <div className=\"flex items-center\">\n              <Star className=\"h-4 w-4 text-sunset fill-current\" />\n              <span className=\"ml-1 text-sm\">\n                {destination.rating} ({destination.reviewCount?.toLocaleString() || 0} reviews)\n              </span>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </Link>\n  );\n}\n","size_bytes":1716},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Compass, Facebook, Instagram, Twitter, Youtube, Phone, Mail } from \"lucide-react\";\n\nexport default function Footer() {\n  const handleNewsletterSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle newsletter subscription\n  };\n\n  return (\n    <footer className=\"bg-gray-900 text-white py-16\">\n      <div className=\"container mx-auto px-4 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\n          {/* Company Info */}\n          <div>\n            <Link href=\"/\" className=\"flex items-center space-x-2 mb-6\">\n              <Compass className=\"text-2xl text-sunset\" />\n              <span className=\"font-poppins font-bold text-xl\">Wanderlust</span>\n            </Link>\n            <p className=\"text-gray-400 mb-6 leading-relaxed\">\n              Creating unforgettable travel experiences that connect you with the world's most beautiful destinations and cultures.\n            </p>\n            <div className=\"flex space-x-4\">\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"w-10 h-10 bg-gray-800 rounded-full hover:bg-sunset transition-colors\"\n                data-testid=\"social-facebook\"\n              >\n                <Facebook className=\"h-5 w-5\" />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"w-10 h-10 bg-gray-800 rounded-full hover:bg-sunset transition-colors\"\n                data-testid=\"social-instagram\"\n              >\n                <Instagram className=\"h-5 w-5\" />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"w-10 h-10 bg-gray-800 rounded-full hover:bg-sunset transition-colors\"\n                data-testid=\"social-twitter\"\n              >\n                <Twitter className=\"h-5 w-5\" />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"w-10 h-10 bg-gray-800 rounded-full hover:bg-sunset transition-colors\"\n                data-testid=\"social-youtube\"\n              >\n                <Youtube className=\"h-5 w-5\" />\n              </Button>\n            </div>\n          </div>\n          \n          {/* Quick Links */}\n          <div>\n            <h4 className=\"font-poppins font-semibold text-lg mb-6\">Quick Links</h4>\n            <ul className=\"space-y-3\">\n              <li>\n                <Link href=\"/destinations\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Destinations\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/packages\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Travel Packages\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/tours\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Group Tours\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/custom\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Custom Itineraries\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/insurance\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Travel Insurance\n                </Link>\n              </li>\n            </ul>\n          </div>\n          \n          {/* Support */}\n          <div>\n            <h4 className=\"font-poppins font-semibold text-lg mb-6\">Support</h4>\n            <ul className=\"space-y-3\">\n              <li>\n                <Link href=\"/help\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Help Center\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/contact\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Contact Us\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/modifications\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Booking Modifications\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/cancellation\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Cancellation Policy\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/guidelines\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n                  Travel Guidelines\n                </Link>\n              </li>\n            </ul>\n          </div>\n          \n          {/* Newsletter */}\n          <div>\n            <h4 className=\"font-poppins font-semibold text-lg mb-6\">Stay Updated</h4>\n            <p className=\"text-gray-400 mb-4\">\n              Subscribe to get the latest travel deals and inspiration.\n            </p>\n            <form onSubmit={handleNewsletterSubmit} className=\"space-y-3\" data-testid=\"newsletter-form\">\n              <Input\n                type=\"email\"\n                placeholder=\"Your email address\"\n                className=\"bg-gray-800 border-gray-700 focus:border-sunset text-white placeholder:text-gray-400\"\n                data-testid=\"newsletter-email\"\n                required\n              />\n              <Button\n                type=\"submit\"\n                className=\"w-full bg-sunset hover:bg-orange-600 text-white\"\n                data-testid=\"newsletter-submit\"\n              >\n                Subscribe\n              </Button>\n            </form>\n            \n            {/* Contact Info */}\n            <div className=\"mt-8 space-y-2\">\n              <div className=\"flex items-center text-gray-400\">\n                <Phone className=\"h-4 w-4 mr-3\" />\n                <span>+1 (555) 123-4567</span>\n              </div>\n              <div className=\"flex items-center text-gray-400\">\n                <Mail className=\"h-4 w-4 mr-3\" />\n                <span>hello@wanderlust.com</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-800 pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-gray-400 mb-4 md:mb-0\">\n            &copy; 2024 Wanderlust Adventures. All rights reserved.\n          </p>\n          <div className=\"flex space-x-6\">\n            <Link href=\"/privacy\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n              Privacy Policy\n            </Link>\n            <Link href=\"/terms\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n              Terms of Service\n            </Link>\n            <Link href=\"/cookies\" className=\"text-gray-400 hover:text-sunset transition-colors\">\n              Cookie Policy\n            </Link>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":7092},"client/src/components/header.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Menu, Compass, Globe } from \"lucide-react\";\n\nexport default function Header() {\n  const [location] = useLocation();\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const navigation = [\n    { name: 'Destinations', href: '/destinations' },\n    { name: 'Packages', href: '/packages' },\n    { name: 'Experiences', href: '/experiences' },\n    { name: 'About', href: '/about' },\n    { name: 'Contact', href: '/contact' },\n  ];\n\n  return (\n    <header \n      className={`fixed top-0 w-full z-50 transition-all duration-300 ${\n        isScrolled ? 'bg-white shadow-sm' : 'bg-white/95 backdrop-blur-md'\n      }`}\n      data-testid=\"header\"\n    >\n      <nav className=\"container mx-auto px-4 lg:px-8 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <Link href=\"/\" className=\"flex items-center space-x-2\" data-testid=\"logo\">\n            <Compass className=\"text-2xl text-forest\" />\n            <span className=\"font-poppins font-bold text-xl text-forest\">Wanderlust</span>\n          </Link>\n          \n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navigation.map((item) => (\n              <Link \n                key={item.name}\n                href={item.href}\n                className={`transition-colors duration-200 ${\n                  location === item.href \n                    ? 'text-forest font-medium' \n                    : 'text-gray-700 hover:text-forest'\n                }`}\n                data-testid={`nav-${item.name.toLowerCase()}`}\n              >\n                {item.name}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <Globe className=\"text-gray-600 hover:text-forest cursor-pointer transition-colors\" />\n            <Button \n              variant=\"outline\" \n              className=\"hidden md:block border-forest text-forest hover:bg-forest hover:text-white\"\n              data-testid=\"sign-in-button\"\n            >\n              Sign In\n            </Button>\n            <Button \n              className=\"bg-sunset hover:bg-orange-600 text-white\"\n              data-testid=\"get-started-button\"\n            >\n              <span className=\"hidden md:inline\">Get Started</span>\n              <span className=\"md:hidden\">Join</span>\n            </Button>\n            \n            {/* Mobile Menu */}\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden\" data-testid=\"mobile-menu-button\">\n                  <Menu className=\"h-6 w-6\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n                <div className=\"flex flex-col space-y-4 mt-8\">\n                  {navigation.map((item) => (\n                    <Link\n                      key={item.name}\n                      href={item.href}\n                      className={`text-lg transition-colors duration-200 ${\n                        location === item.href \n                          ? 'text-forest font-medium' \n                          : 'text-gray-700 hover:text-forest'\n                      }`}\n                      data-testid={`mobile-nav-${item.name.toLowerCase()}`}\n                    >\n                      {item.name}\n                    </Link>\n                  ))}\n                  <div className=\"pt-4 border-t\">\n                    <Button variant=\"outline\" className=\"w-full mb-2 border-forest text-forest\">\n                      Sign In\n                    </Button>\n                    <Button className=\"w-full bg-sunset hover:bg-orange-600 text-white\">\n                      Get Started\n                    </Button>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n}\n","size_bytes":4388},"client/src/components/hero-section.tsx":{"content":"import SearchForm from \"./search-form\";\n\nexport default function HeroSection() {\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\n      {/* Background Image */}\n      <div \n        className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\" \n        style={{\n          backgroundImage: \"url('https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&h=1080')\"\n        }}\n      />\n      <div className=\"absolute inset-0 hero-overlay\" />\n      \n      <div className=\"relative z-10 text-center px-4 max-w-6xl mx-auto animate-fade-in\">\n        <h1 className=\"font-poppins font-bold text-5xl md:text-7xl text-white mb-6 leading-tight\">\n          Discover Your Next\n          <span className=\"text-sunset animate-float inline-block ml-4\">Adventure</span>\n        </h1>\n        <p className=\"text-xl md:text-2xl text-white/90 mb-12 max-w-3xl mx-auto font-light leading-relaxed\">\n          Explore breathtaking destinations, create unforgettable memories, and embark on journeys that transform your perspective on the world.\n        </p>\n        \n        <SearchForm />\n      </div>\n    </section>\n  );\n}\n","size_bytes":1203},"client/src/components/interactive-map.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\n\nconst regionStats = [\n  { name: \"Europe\", count: 45, color: \"text-forest\" },\n  { name: \"Asia\", count: 38, color: \"text-ocean\" },\n  { name: \"Africa\", count: 28, color: \"text-terracotta\" },\n  { name: \"Americas\", count: 42, color: \"text-sunset\" },\n  { name: \"Oceania\", count: 17, color: \"text-sand\" },\n];\n\nconst mapMarkers = [\n  { id: 1, top: \"33%\", left: \"25%\", region: \"Europe\" },\n  { id: 2, top: \"50%\", left: \"50%\", region: \"Asia\" },\n  { id: 3, top: \"66%\", left: \"33%\", region: \"Africa\" },\n  { id: 4, top: \"50%\", left: \"16%\", region: \"Americas\" },\n  { id: 5, bottom: \"33%\", right: \"25%\", region: \"Oceania\" },\n];\n\nexport default function InteractiveMap() {\n  return (\n    <section className=\"py-20 bg-gray-50\">\n      <div className=\"container mx-auto px-4 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-poppins font-bold text-4xl md:text-5xl text-gray-800 mb-6\">\n            Explore Destinations\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n            Click on any region to discover amazing travel opportunities around the world\n          </p>\n        </div>\n        \n        <Card className=\"shadow-lg\">\n          <CardContent className=\"p-8\">\n            {/* World map placeholder with interactive regions */}\n            <div className=\"relative w-full h-96 bg-gray-100 rounded-xl overflow-hidden\" data-testid=\"interactive-map\">\n              <img\n                src=\"https://images.unsplash.com/photo-1488646953014-85cb44e25828?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=600\"\n                alt=\"Interactive world map showing travel destinations\"\n                className=\"w-full h-full object-cover\"\n              />\n              \n              {/* Interactive markers */}\n              {mapMarkers.map((marker) => (\n                <div\n                  key={marker.id}\n                  className=\"absolute w-4 h-4 bg-sunset rounded-full animate-pulse cursor-pointer transform -translate-x-1/2 -translate-y-1/2 hover:scale-150 transition-transform\"\n                  style={{\n                    top: marker.top,\n                    left: marker.left,\n                    bottom: marker.bottom,\n                    right: marker.right,\n                  }}\n                  data-testid={`map-marker-${marker.region.toLowerCase()}`}\n                  title={`Explore ${marker.region}`}\n                />\n              ))}\n              \n              {/* Tooltip placeholder - would be shown on hover in real implementation */}\n              <div className=\"absolute top-16 left-16 bg-white rounded-lg shadow-lg p-4 opacity-0 transition-opacity pointer-events-none\">\n                <h4 className=\"font-semibold text-lg mb-1\">Europe</h4>\n                <p className=\"text-gray-600 text-sm mb-2\">45 destinations available</p>\n                <button className=\"text-forest font-medium text-sm hover:underline\">\n                  Explore Europe\n                </button>\n              </div>\n            </div>\n            \n            {/* Quick stats */}\n            <div className=\"grid grid-cols-2 md:grid-cols-5 gap-6 mt-8\" data-testid=\"region-stats\">\n              {regionStats.map((region) => (\n                <div key={region.name} className=\"text-center\">\n                  <div className={`text-2xl font-bold mb-1 ${region.color}`}>\n                    {region.count}\n                  </div>\n                  <div className=\"text-gray-600 text-sm\">{region.name}</div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3664},"client/src/components/package-card.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Star, Calendar, Users } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport type { PackageWithDestination } from \"@shared/schema\";\n\ninterface PackageCardProps {\n  package: PackageWithDestination;\n}\n\nconst categoryColors = {\n  adventure: \"bg-terracotta/10 text-terracotta\",\n  cultural: \"bg-ocean/10 text-ocean\",\n  luxury: \"bg-sunset/10 text-sunset\",\n  family: \"bg-forest/10 text-forest\",\n};\n\nexport default function PackageCard({ package: pkg }: PackageCardProps) {\n  return (\n    <Card className=\"overflow-hidden hover:shadow-xl transition-shadow duration-300\">\n      <div className=\"relative\">\n        <img\n          src={pkg.imageUrl}\n          alt={pkg.title}\n          className=\"w-full h-56 object-cover\"\n          loading=\"lazy\"\n        />\n        <div className=\"absolute top-4 left-4\">\n          <Badge \n            className={`${categoryColors[pkg.category as keyof typeof categoryColors]} font-semibold`}\n            data-testid={`badge-${pkg.category}`}\n          >\n            {pkg.category.charAt(0).toUpperCase() + pkg.category.slice(1)}\n          </Badge>\n        </div>\n      </div>\n      \n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center\">\n            <Star className=\"h-4 w-4 text-sunset fill-current\" />\n            <span className=\"ml-1 text-sm font-medium\">\n              {pkg.rating} ({pkg.reviewCount})\n            </span>\n          </div>\n        </div>\n        \n        <h3 className=\"font-poppins font-semibold text-xl mb-2\" data-testid={`package-title-${pkg.id}`}>\n          {pkg.title}\n        </h3>\n        <p className=\"text-gray-600 mb-4 line-clamp-2\">{pkg.description}</p>\n        \n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n            <div className=\"flex items-center\">\n              <Calendar className=\"h-4 w-4 mr-1\" />\n              <span>{pkg.duration} Days</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Users className=\"h-4 w-4 mr-1\" />\n              <span>Max {pkg.maxGuests}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center justify-between\">\n          <div>\n            <span className=\"text-2xl font-bold text-forest\" data-testid={`package-price-${pkg.id}`}>\n              ${pkg.price}\n            </span>\n            <span className=\"text-gray-500\">/person</span>\n          </div>\n          <Link href={`/packages/${pkg.id}`}>\n            <Button \n              className=\"bg-sunset hover:bg-orange-600 text-white\"\n              data-testid={`view-details-${pkg.id}`}\n            >\n              View Details\n            </Button>\n          </Link>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":3017},"client/src/components/search-form.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { MapPin, Calendar, Users, Search } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nexport default function SearchForm() {\n  const [, setLocation] = useLocation();\n  const [searchData, setSearchData] = useState({\n    destination: '',\n    checkIn: '',\n    checkOut: '',\n    guests: '2',\n  });\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Redirect to packages page with search parameters\n    const params = new URLSearchParams({\n      destination: searchData.destination,\n      checkIn: searchData.checkIn,\n      checkOut: searchData.checkOut,\n      guests: searchData.guests,\n    });\n    setLocation(`/packages?${params.toString()}`);\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl p-8 max-w-4xl mx-auto search-shadow animate-slide-up\">\n      <form onSubmit={handleSearch} data-testid=\"search-form\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <div className=\"md:col-span-1\">\n            <Label htmlFor=\"destination\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Destination\n            </Label>\n            <div className=\"relative\">\n              <Input\n                id=\"destination\"\n                type=\"text\"\n                placeholder=\"Where to?\"\n                value={searchData.destination}\n                onChange={(e) => setSearchData(prev => ({ ...prev, destination: e.target.value }))}\n                className=\"pl-10 py-3 border-2 border-gray-200 focus:border-forest\"\n                data-testid=\"input-destination\"\n              />\n              <MapPin className=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n            </div>\n          </div>\n          \n          <div className=\"md:col-span-1\">\n            <Label htmlFor=\"checkin\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Check-in\n            </Label>\n            <div className=\"relative\">\n              <Input\n                id=\"checkin\"\n                type=\"date\"\n                value={searchData.checkIn}\n                onChange={(e) => setSearchData(prev => ({ ...prev, checkIn: e.target.value }))}\n                className=\"pl-10 py-3 border-2 border-gray-200 focus:border-forest\"\n                data-testid=\"input-checkin\"\n              />\n              <Calendar className=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n            </div>\n          </div>\n          \n          <div className=\"md:col-span-1\">\n            <Label htmlFor=\"checkout\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Check-out\n            </Label>\n            <div className=\"relative\">\n              <Input\n                id=\"checkout\"\n                type=\"date\"\n                value={searchData.checkOut}\n                onChange={(e) => setSearchData(prev => ({ ...prev, checkOut: e.target.value }))}\n                className=\"pl-10 py-3 border-2 border-gray-200 focus:border-forest\"\n                data-testid=\"input-checkout\"\n              />\n              <Calendar className=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n            </div>\n          </div>\n          \n          <div className=\"md:col-span-1\">\n            <Label htmlFor=\"guests\" className=\"block text-sm font-semibold text-gray-700 mb-2\">\n              Guests\n            </Label>\n            <div className=\"relative\">\n              <Select \n                value={searchData.guests} \n                onValueChange={(value) => setSearchData(prev => ({ ...prev, guests: value }))}\n              >\n                <SelectTrigger className=\"pl-10 py-3 border-2 border-gray-200 focus:border-forest\" data-testid=\"select-guests\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"1\">1 Guest</SelectItem>\n                  <SelectItem value=\"2\">2 Guests</SelectItem>\n                  <SelectItem value=\"3\">3 Guests</SelectItem>\n                  <SelectItem value=\"4\">4+ Guests</SelectItem>\n                </SelectContent>\n              </Select>\n              <Users className=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"mt-8 text-center\">\n          <Button\n            type=\"submit\"\n            size=\"lg\"\n            className=\"bg-sunset hover:bg-orange-600 text-white px-12 py-4 text-lg font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg\"\n            data-testid=\"search-button\"\n          >\n            <Search className=\"mr-2 h-5 w-5\" />\n            Search Adventures\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","size_bytes":4955},"client/src/components/testimonials.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Star } from \"lucide-react\";\n\nconst testimonials = [\n  {\n    id: 1,\n    rating: 5,\n    content: \"The Greek Islands tour exceeded all our expectations. The local guides were incredible, and every moment was perfectly planned. We'll definitely book with Wanderlust again!\",\n    author: \"Sarah & Mark Johnson\",\n    package: \"Greek Islands Discovery\",\n    avatar: \"https://images.unsplash.com/photo-1560250097-0b93528c311a?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\",\n  },\n  {\n    id: 2,\n    rating: 5,\n    content: \"An absolutely life-changing adventure! The white water rafting was thrilling, and the camping under the stars was magical. Professional guides made us feel safe throughout.\",\n    author: \"Emily Chen\",\n    package: \"Colorado River Expedition\",\n    avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\",\n  },\n  {\n    id: 3,\n    rating: 5,\n    content: \"Pure luxury from start to finish. The overwater villa was stunning, and the service was impeccable. Our honeymoon couldn't have been more perfect!\",\n    author: \"David & Lisa Rodriguez\",\n    package: \"Maldives Paradise Retreat\",\n    avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\",\n  },\n];\n\nexport default function Testimonials() {\n  return (\n    <section className=\"py-20 bg-gradient-to-br from-forest/5 to-ocean/5\">\n      <div className=\"container mx-auto px-4 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"font-poppins font-bold text-4xl md:text-5xl text-gray-800 mb-6\">\n            Traveler Stories\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n            Hear from our adventurers about their unforgettable experiences around the world\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\" data-testid=\"testimonials-grid\">\n          {testimonials.map((testimonial) => (\n            <Card key={testimonial.id} className=\"bg-white shadow-lg\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"flex text-sunset\">\n                    {Array.from({ length: testimonial.rating }).map((_, i) => (\n                      <Star key={i} className=\"h-4 w-4 fill-current\" />\n                    ))}\n                  </div>\n                </div>\n                <p className=\"text-gray-700 mb-6 italic leading-relaxed\">\n                  \"{testimonial.content}\"\n                </p>\n                <div className=\"flex items-center\">\n                  <img\n                    src={testimonial.avatar}\n                    alt={testimonial.author}\n                    className=\"w-12 h-12 rounded-full object-cover mr-4\"\n                    loading=\"lazy\"\n                  />\n                  <div>\n                    <div className=\"font-semibold\" data-testid={`testimonial-author-${testimonial.id}`}>\n                      {testimonial.author}\n                    </div>\n                    <div className=\"text-gray-500 text-sm\">{testimonial.package}</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3406},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/data.ts":{"content":"import type { Destination, Package, Review } from \"@shared/schema\";\n\n// Utility functions for data formatting and manipulation\nexport const formatPrice = (price: string | number): string => {\n  const numPrice = typeof price === 'string' ? parseFloat(price) : price;\n  return numPrice.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n};\n\nexport const formatDuration = (days: number): string => {\n  if (days === 1) return '1 day';\n  if (days < 7) return `${days} days`;\n  const weeks = Math.floor(days / 7);\n  const remainingDays = days % 7;\n  \n  if (weeks === 1 && remainingDays === 0) return '1 week';\n  if (remainingDays === 0) return `${weeks} weeks`;\n  if (weeks === 1) return `1 week, ${remainingDays} day${remainingDays > 1 ? 's' : ''}`;\n  return `${weeks} weeks, ${remainingDays} day${remainingDays > 1 ? 's' : ''}`;\n};\n\nexport const formatRating = (rating: string | number): number => {\n  const numRating = typeof rating === 'string' ? parseFloat(rating) : rating;\n  return Math.round(numRating * 10) / 10;\n};\n\nexport const formatDate = (date: string | Date): string => {\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\n  return dateObj.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n};\n\nexport const formatDateShort = (date: string | Date): string => {\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\n  return dateObj.toLocaleDateString('en-US', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n  });\n};\n\nexport const calculateTotalPrice = (basePrice: string | number, guests: number, addOns: { insurance?: boolean, taxes?: boolean } = {}): number => {\n  const numPrice = typeof basePrice === 'string' ? parseFloat(basePrice) : basePrice;\n  let total = numPrice * guests;\n  \n  if (addOns.insurance) {\n    total += 99; // Fixed insurance fee\n  }\n  \n  if (addOns.taxes) {\n    total += Math.floor(numPrice * 0.1); // 10% taxes\n  }\n  \n  return total;\n};\n\nexport const getCategoryColor = (category: string): string => {\n  const colors = {\n    adventure: 'terracotta',\n    cultural: 'ocean',\n    luxury: 'sunset',\n    family: 'forest',\n  };\n  return colors[category as keyof typeof colors] || 'gray';\n};\n\nexport const getCategoryBadgeClass = (category: string): string => {\n  const classes = {\n    adventure: 'bg-terracotta/10 text-terracotta',\n    cultural: 'bg-ocean/10 text-ocean',\n    luxury: 'bg-sunset/10 text-sunset',\n    family: 'bg-forest/10 text-forest',\n  };\n  return classes[category as keyof typeof classes] || 'bg-gray-100 text-gray-600';\n};\n\nexport const getDifficultyLevel = (category: string, duration: number): 'Easy' | 'Moderate' | 'Challenging' => {\n  if (category === 'luxury' || category === 'family') return 'Easy';\n  if (duration <= 7) return 'Moderate';\n  if (category === 'adventure' && duration > 10) return 'Challenging';\n  return 'Moderate';\n};\n\nexport const getSeasonRecommendation = (destination?: Destination): string => {\n  if (!destination) return 'Year-round';\n  \n  // Simple logic based on region\n  const region = destination.region.toLowerCase();\n  if (region.includes('asia')) return 'Oct-Mar (Dry Season)';\n  if (region.includes('europe')) return 'May-Sep (Summer)';\n  if (region.includes('africa')) return 'Jun-Oct (Dry Season)';\n  if (region.includes('america')) return 'Apr-Oct (Spring-Fall)';\n  return 'Year-round';\n};\n\nexport const filterPackagesBySearchParams = (\n  packages: Package[], \n  params: {\n    destination?: string;\n    checkIn?: string;\n    checkOut?: string;\n    guests?: number;\n    category?: string;\n    priceRange?: string;\n    duration?: string;\n  }\n) => {\n  return packages.filter(pkg => {\n    // Category filter\n    if (params.category && params.category !== 'all' && pkg.category !== params.category) {\n      return false;\n    }\n    \n    // Guest capacity filter\n    if (params.guests && pkg.maxGuests < params.guests) {\n      return false;\n    }\n    \n    // Price range filter\n    if (params.priceRange && params.priceRange !== 'all') {\n      const price = parseFloat(pkg.price);\n      switch (params.priceRange) {\n        case 'budget':\n          if (price >= 2000) return false;\n          break;\n        case 'mid':\n          if (price < 2000 || price >= 4000) return false;\n          break;\n        case 'luxury':\n          if (price < 4000) return false;\n          break;\n      }\n    }\n    \n    // Duration filter\n    if (params.duration && params.duration !== 'all') {\n      switch (params.duration) {\n        case 'short':\n          if (pkg.duration > 7) return false;\n          break;\n        case 'medium':\n          if (pkg.duration <= 7 || pkg.duration > 14) return false;\n          break;\n        case 'long':\n          if (pkg.duration <= 14) return false;\n          break;\n      }\n    }\n    \n    return true;\n  });\n};\n\nexport const calculateAverageRating = (reviews: Review[]): number => {\n  if (reviews.length === 0) return 0;\n  const sum = reviews.reduce((acc, review) => acc + review.rating, 0);\n  return Math.round((sum / reviews.length) * 10) / 10;\n};\n\nexport const generateShareUrl = (packageId: string, packageTitle: string): string => {\n  const baseUrl = window.location.origin;\n  return `${baseUrl}/packages/${packageId}`;\n};\n\nexport const generateShareText = (packageTitle: string, price: string): string => {\n  return `Check out this amazing travel package: ${packageTitle} starting from $${price}! 🌍✈️`;\n};\n\nexport const isValidDate = (dateString: string): boolean => {\n  const date = new Date(dateString);\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return date >= today && !isNaN(date.getTime());\n};\n\nexport const getDaysUntilDeparture = (departureDate: string | Date): number => {\n  const departure = typeof departureDate === 'string' ? new Date(departureDate) : departureDate;\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  departure.setHours(0, 0, 0, 0);\n  \n  const diffTime = departure.getTime() - today.getTime();\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n};\n\nexport const getBookingStatus = (createdAt: string | Date, departureDate: string | Date): 'confirmed' | 'upcoming' | 'completed' | 'cancelled' => {\n  const departure = typeof departureDate === 'string' ? new Date(departureDate) : departureDate;\n  const today = new Date();\n  \n  if (departure < today) return 'completed';\n  return 'confirmed';\n};\n\n// Mock data for development/testing - only use if explicitly needed\nexport const MOCK_TESTIMONIALS = [\n  {\n    id: '1',\n    rating: 5,\n    content: \"An incredible journey that exceeded all expectations. The attention to detail and local expertise made this trip unforgettable.\",\n    author: \"Sarah Johnson\",\n    location: \"New York, USA\",\n    packageTitle: \"Greek Islands Discovery\",\n    avatar: \"https://images.unsplash.com/photo-1494790108755-2616b612b77c?w=100&h=100&fit=crop&crop=face\",\n  },\n  {\n    id: '2',\n    rating: 5,\n    content: \"Professional guides, stunning locations, and perfect organization. This adventure changed my perspective on travel.\",\n    author: \"Miguel Rodriguez\",\n    location: \"Barcelona, Spain\",\n    packageTitle: \"Patagonia Trekking\",\n    avatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop&crop=face\",\n  },\n  {\n    id: '3',\n    rating: 5,\n    content: \"The luxury service and breathtaking destinations made our honeymoon absolutely perfect. Highly recommended!\",\n    author: \"Emily Chen\",\n    location: \"San Francisco, USA\", \n    packageTitle: \"Maldives Paradise Retreat\",\n    avatar: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100&h=100&fit=crop&crop=face\",\n  },\n];\n\nexport const REGIONS = [\n  'Asia',\n  'Europe', \n  'Africa',\n  'North America',\n  'South America',\n  'Oceania',\n  'Middle East',\n] as const;\n\nexport const CATEGORIES = [\n  'adventure',\n  'cultural',\n  'luxury',\n  'family',\n  'wellness',\n  'wildlife',\n] as const;\n\nexport const PRICE_RANGES = [\n  { label: 'Under $2,000', value: 'budget' },\n  { label: '$2,000 - $4,000', value: 'mid' },\n  { label: 'Over $4,000', value: 'luxury' },\n] as const;\n\nexport const DURATION_RANGES = [\n  { label: '1-7 Days', value: 'short' },\n  { label: '8-14 Days', value: 'medium' },\n  { label: '15+ Days', value: 'long' },\n] as const;\n","size_bytes":8318},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/destinations.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Header from \"@/components/header\";\nimport Footer from \"@/components/footer\";\nimport DestinationCard from \"@/components/destination-card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Search, MapPin } from \"lucide-react\";\nimport { useState } from \"react\";\n\nexport default function Destinations() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedRegion, setSelectedRegion] = useState(\"all\");\n\n  const { data: destinations, isLoading } = useQuery({\n    queryKey: ['/api/destinations'],\n  });\n\n  const filteredDestinations = destinations?.filter((dest: any) => {\n    const matchesSearch = dest.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         dest.country.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesRegion = selectedRegion === \"all\" || dest.region.toLowerCase() === selectedRegion.toLowerCase();\n    return matchesSearch && matchesRegion;\n  }) || [];\n\n  return (\n    <div className=\"min-h-screen bg-warm-white\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"relative py-32 bg-gradient-to-r from-forest to-ocean\">\n        <div className=\"container mx-auto px-4 lg:px-8 text-center\">\n          <h1 className=\"font-poppins font-bold text-5xl md:text-6xl text-white mb-6\">\n            Explore Destinations\n          </h1>\n          <p className=\"text-xl text-white/90 max-w-3xl mx-auto mb-8\">\n            Discover breathtaking places around the world, from tropical paradises to cultural treasures\n          </p>\n          \n          {/* Search and Filter */}\n          <div className=\"max-w-2xl mx-auto bg-white rounded-2xl p-6 shadow-lg\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1 relative\">\n                <Search className=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n                <Input\n                  placeholder=\"Search destinations...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                  data-testid=\"search-destinations\"\n                />\n              </div>\n              <Select value={selectedRegion} onValueChange={setSelectedRegion}>\n                <SelectTrigger className=\"md:w-48\" data-testid=\"filter-region\">\n                  <MapPin className=\"h-4 w-4 mr-2\" />\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Regions</SelectItem>\n                  <SelectItem value=\"asia\">Asia</SelectItem>\n                  <SelectItem value=\"europe\">Europe</SelectItem>\n                  <SelectItem value=\"africa\">Africa</SelectItem>\n                  <SelectItem value=\"south america\">South America</SelectItem>\n                  <SelectItem value=\"north america\">North America</SelectItem>\n                  <SelectItem value=\"oceania\">Oceania</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Destinations Grid */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"mb-8 flex justify-between items-center\">\n            <h2 className=\"font-poppins font-bold text-3xl text-gray-800\">\n              {filteredDestinations.length} Destinations Found\n            </h2>\n          </div>\n          \n          {isLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {Array.from({ length: 9 }).map((_, i) => (\n                <div key={i} className=\"bg-gray-200 animate-pulse rounded-2xl h-80\"></div>\n              ))}\n            </div>\n          ) : filteredDestinations.length === 0 ? (\n            <div className=\"text-center py-16\">\n              <MapPin className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-600 mb-2\">No destinations found</h3>\n              <p className=\"text-gray-500\">Try adjusting your search criteria</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\" data-testid=\"destinations-list\">\n              {filteredDestinations.map((destination: any) => (\n                <DestinationCard key={destination.id} destination={destination} />\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":4724},"client/src/pages/home.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/header\";\nimport HeroSection from \"@/components/hero-section\";\nimport DestinationCard from \"@/components/destination-card\";\nimport PackageCard from \"@/components/package-card\";\nimport InteractiveMap from \"@/components/interactive-map\";\nimport BookingForm from \"@/components/booking-form\";\nimport Testimonials from \"@/components/testimonials\";\nimport Footer from \"@/components/footer\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Star, MapPin, Users, Calendar, Phone, Mail } from \"lucide-react\";\n\nexport default function Home() {\n  const { data: featuredDestinations, isLoading: destinationsLoading } = useQuery({\n    queryKey: ['/api/destinations/featured'],\n  });\n\n  const { data: featuredPackages, isLoading: packagesLoading } = useQuery({\n    queryKey: ['/api/packages/featured'],\n  });\n\n  const [activeFilter, setActiveFilter] = useState('all');\n\n  const filteredPackages = featuredPackages?.filter((pkg: any) => \n    activeFilter === 'all' || pkg.category === activeFilter\n  ) || [];\n\n  return (\n    <div className=\"min-h-screen bg-warm-white\">\n      <Header />\n      \n      <HeroSection />\n      \n      {/* Trust Indicators */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 text-center\">\n            <div className=\"animate-fade-in\" data-testid=\"stat-travelers\">\n              <div className=\"text-4xl font-poppins font-bold text-forest mb-2\">250K+</div>\n              <div className=\"text-gray-600\">Happy Travelers</div>\n            </div>\n            <div className=\"animate-fade-in\" data-testid=\"stat-destinations\">\n              <div className=\"text-4xl font-poppins font-bold text-ocean mb-2\">180+</div>\n              <div className=\"text-gray-600\">Destinations</div>\n            </div>\n            <div className=\"animate-fade-in\" data-testid=\"stat-satisfaction\">\n              <div className=\"text-4xl font-poppins font-bold text-terracotta mb-2\">98%</div>\n              <div className=\"text-gray-600\">Satisfaction Rate</div>\n            </div>\n            <div className=\"animate-fade-in\" data-testid=\"stat-support\">\n              <div className=\"text-4xl font-poppins font-bold text-sunset mb-2\">24/7</div>\n              <div className=\"text-gray-600\">Support</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Destinations */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-poppins font-bold text-4xl md:text-5xl text-gray-800 mb-6\">\n              Popular Destinations\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n              Discover the world's most captivating places, from pristine beaches to majestic mountains\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\" data-testid=\"destinations-grid\">\n            {destinationsLoading ? (\n              Array.from({ length: 6 }).map((_, i) => (\n                <div key={i} className=\"bg-gray-200 animate-pulse rounded-2xl h-80\"></div>\n              ))\n            ) : (\n              featuredDestinations?.map((destination: any) => (\n                <DestinationCard key={destination.id} destination={destination} />\n              ))\n            )}\n          </div>\n          \n          <div className=\"text-center mt-12\">\n            <Link href=\"/destinations\">\n              <Button variant=\"outline\" size=\"lg\" className=\"border-forest text-forest hover:bg-forest hover:text-white\">\n                View All Destinations\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Travel Packages */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-poppins font-bold text-4xl md:text-5xl text-gray-800 mb-6\">\n              Curated Travel Packages\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n              Handpicked experiences that combine adventure, culture, and comfort for the perfect getaway\n            </p>\n          </div>\n\n          {/* Filter Controls */}\n          <div className=\"flex flex-wrap justify-center gap-4 mb-12\" data-testid=\"package-filters\">\n            {['all', 'adventure', 'cultural', 'luxury', 'family'].map((filter) => (\n              <Button\n                key={filter}\n                onClick={() => setActiveFilter(filter)}\n                variant={activeFilter === filter ? \"default\" : \"outline\"}\n                className={`rounded-full ${\n                  activeFilter === filter \n                    ? 'bg-forest text-white hover:bg-green-800' \n                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                }`}\n                data-testid={`filter-${filter}`}\n              >\n                {filter.charAt(0).toUpperCase() + filter.slice(1)} \n                {filter === 'all' ? ' Packages' : ''}\n              </Button>\n            ))}\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\" data-testid=\"packages-grid\">\n            {packagesLoading ? (\n              Array.from({ length: 6 }).map((_, i) => (\n                <div key={i} className=\"bg-gray-200 animate-pulse rounded-2xl h-96\"></div>\n              ))\n            ) : (\n              filteredPackages.map((pkg: any) => (\n                <PackageCard key={pkg.id} package={pkg} />\n              ))\n            )}\n          </div>\n          \n          <div className=\"text-center mt-12\">\n            <Link href=\"/packages\">\n              <Button variant=\"outline\" size=\"lg\" className=\"border-forest text-forest hover:bg-forest hover:text-white\">\n                View All Packages\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Interactive Map */}\n      <InteractiveMap />\n\n      {/* Booking System */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-poppins font-bold text-4xl md:text-5xl text-gray-800 mb-6\">\n              Simple & Secure Booking\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n              Book your dream vacation in just a few clicks with our streamlined process\n            </p>\n          </div>\n          \n          {/* Booking Process Steps */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-16\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-forest text-white rounded-full flex items-center justify-center text-2xl font-bold mx-auto mb-4\">\n                1\n              </div>\n              <h3 className=\"font-poppins font-semibold text-xl mb-2\">Choose Your Adventure</h3>\n              <p className=\"text-gray-600\">Browse our curated packages or customize your perfect trip</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-ocean text-white rounded-full flex items-center justify-center text-2xl font-bold mx-auto mb-4\">\n                2\n              </div>\n              <h3 className=\"font-poppins font-semibold text-xl mb-2\">Secure Payment</h3>\n              <p className=\"text-gray-600\">Pay safely with multiple payment options and full protection</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-sunset text-white rounded-full flex items-center justify-center text-2xl font-bold mx-auto mb-4\">\n                3\n              </div>\n              <h3 className=\"font-poppins font-semibold text-xl mb-2\">Start Your Journey</h3>\n              <p className=\"text-gray-600\">Receive your itinerary and enjoy 24/7 support during your trip</p>\n            </div>\n          </div>\n          \n          <BookingForm />\n        </div>\n      </section>\n\n      {/* Testimonials */}\n      <Testimonials />\n\n      <Footer />\n\n      {/* Live Chat Widget */}\n      <div className=\"fixed bottom-6 right-6 z-50\">\n        <Button \n          size=\"icon\"\n          className=\"w-16 h-16 bg-sunset hover:bg-orange-600 text-white rounded-full shadow-lg transition-all duration-300 hover:scale-110\" \n          data-testid=\"chat-button\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path d=\"M12 2C6.48 2 2 6.48 2 12c0 1.54.36 3.04 1.05 4.42L1 22l5.58-2.05C8.96 20.64 10.46 21 12 21c5.52 0 10-4.48 10-10S17.52 2 12 2zm0 16c-1.29 0-2.51-.3-3.58-.85l-.29-.15-2.39.88.88-2.39-.15-.29C5.7 14.51 5.4 13.29 5.4 12c0-3.69 3.01-6.7 6.7-6.7s6.7 3.01 6.7 6.7-3.01 6.7-6.7 6.7z\"/>\n          </svg>\n        </Button>\n      </div>\n    </div>\n  );\n}\n","size_bytes":9149},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/package-details.tsx":{"content":"import { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useParams, Link } from \"wouter\";\nimport Header from \"@/components/header\";\nimport Footer from \"@/components/footer\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { \n  Star, \n  Calendar, \n  Users, \n  MapPin, \n  Clock, \n  Check, \n  Heart,\n  Share2,\n  ArrowLeft,\n  CreditCard,\n  Lock,\n  Phone,\n  Mail\n} from \"lucide-react\";\nimport { useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport PackageCard from \"@/components/package-card\";\n\nconst categoryColors = {\n  adventure: \"bg-terracotta/10 text-terracotta\",\n  cultural: \"bg-ocean/10 text-ocean\", \n  luxury: \"bg-sunset/10 text-sunset\",\n  family: \"bg-forest/10 text-forest\",\n};\n\nexport default function PackageDetails() {\n  const { id } = useParams();\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState(\"overview\");\n  const [bookingData, setBookingData] = useState({\n    guestCount: 2,\n    departureDate: \"\",\n    specialRequests: \"\",\n    paymentMethod: \"\",\n  });\n  const [reviewData, setReviewData] = useState({\n    rating: 5,\n    title: \"\",\n    comment: \"\",\n  });\n\n  const { data: packageData, isLoading: packageLoading } = useQuery({\n    queryKey: ['/api/packages', id],\n  });\n\n  const { data: reviews, isLoading: reviewsLoading } = useQuery({\n    queryKey: ['/api/packages', id, 'reviews'],\n  });\n\n  const { data: relatedPackages } = useQuery({\n    queryKey: ['/api/packages', { category: packageData?.category }],\n    enabled: !!packageData?.category,\n  });\n\n  const bookingMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await apiRequest(\"POST\", \"/api/bookings\", data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Booking Confirmed!\",\n        description: \"Your adventure booking has been successfully confirmed.\",\n      });\n      setBookingData({\n        guestCount: 2,\n        departureDate: \"\",\n        specialRequests: \"\",\n        paymentMethod: \"\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Booking Failed\",\n        description: \"There was an error processing your booking. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const reviewMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await apiRequest(\"POST\", `/api/packages/${id}/reviews`, data);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Review Submitted!\",\n        description: \"Thank you for sharing your experience.\",\n      });\n      setReviewData({ rating: 5, title: \"\", comment: \"\" });\n    },\n    onError: () => {\n      toast({\n        title: \"Review Failed\",\n        description: \"There was an error submitting your review.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleBooking = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!packageData) return;\n\n    const booking = {\n      ...bookingData,\n      packageId: packageData.id,\n      userId: \"temp-user-id\", // In real app, get from auth context\n      totalPrice: calculateTotal().toString(),\n      departureDate: new Date(bookingData.departureDate),\n    };\n\n    bookingMutation.mutate(booking);\n  };\n\n  const handleReviewSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    reviewMutation.mutate({\n      ...reviewData,\n      userId: \"temp-user-id\",\n    });\n  };\n\n  const calculateTotal = () => {\n    if (!packageData) return 0;\n    const basePrice = parseFloat(packageData.price);\n    const guestMultiplier = bookingData.guestCount;\n    const insurance = 99;\n    const taxes = Math.floor(basePrice * 0.1);\n    return (basePrice * guestMultiplier) + insurance + taxes;\n  };\n\n  if (packageLoading) {\n    return (\n      <div className=\"min-h-screen bg-warm-white\">\n        <Header />\n        <div className=\"pt-24 pb-16\">\n          <div className=\"container mx-auto px-4 lg:px-8\">\n            <div className=\"animate-pulse space-y-8\">\n              <div className=\"h-96 bg-gray-200 rounded-2xl\"></div>\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n                <div className=\"lg:col-span-2 space-y-4\">\n                  <div className=\"h-8 bg-gray-200 rounded\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-32 bg-gray-200 rounded\"></div>\n                </div>\n                <div className=\"space-y-4\">\n                  <div className=\"h-8 bg-gray-200 rounded\"></div>\n                  <div className=\"h-48 bg-gray-200 rounded\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  if (!packageData) {\n    return (\n      <div className=\"min-h-screen bg-warm-white\">\n        <Header />\n        <div className=\"pt-24 pb-16 text-center\">\n          <div className=\"container mx-auto px-4 lg:px-8\">\n            <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">Package Not Found</h1>\n            <p className=\"text-gray-600 mb-8\">The package you're looking for doesn't exist.</p>\n            <Link href=\"/packages\">\n              <Button className=\"bg-forest hover:bg-green-800 text-white\">\n                Back to Packages\n              </Button>\n            </Link>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n\n  const filteredRelatedPackages = relatedPackages?.filter((pkg: any) => pkg.id !== packageData.id).slice(0, 3) || [];\n\n  return (\n    <div className=\"min-h-screen bg-warm-white\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"relative pt-24 pb-8\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"mb-6\">\n            <Link href=\"/packages\">\n              <Button variant=\"ghost\" className=\"text-gray-600 hover:text-forest\" data-testid=\"back-to-packages\">\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Back to Packages\n              </Button>\n            </Link>\n          </div>\n          \n          <div className=\"relative rounded-2xl overflow-hidden shadow-2xl mb-8\">\n            <img\n              src={packageData.imageUrl}\n              alt={packageData.title}\n              className=\"w-full h-96 object-cover\"\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent\"></div>\n            <div className=\"absolute bottom-8 left-8 text-white\">\n              <div className=\"flex items-center gap-4 mb-4\">\n                <Badge \n                  className={`${categoryColors[packageData.category as keyof typeof categoryColors]} bg-white/20 backdrop-blur-sm`}\n                  data-testid=\"package-category\"\n                >\n                  {packageData.category.charAt(0).toUpperCase() + packageData.category.slice(1)}\n                </Badge>\n                <div className=\"flex items-center\">\n                  <Star className=\"h-4 w-4 text-sunset fill-current mr-1\" />\n                  <span className=\"font-medium\">{packageData.rating} ({packageData.reviewCount} reviews)</span>\n                </div>\n              </div>\n              <h1 className=\"font-poppins font-bold text-4xl md:text-5xl mb-2\" data-testid=\"package-title\">\n                {packageData.title}\n              </h1>\n              {packageData.destination && (\n                <div className=\"flex items-center text-white/90\">\n                  <MapPin className=\"h-5 w-5 mr-2\" />\n                  <span className=\"text-lg\">{packageData.destination.name}, {packageData.destination.country}</span>\n                </div>\n              )}\n            </div>\n            <div className=\"absolute top-8 right-8 flex gap-2\">\n              <Button variant=\"ghost\" size=\"icon\" className=\"bg-white/20 backdrop-blur-sm hover:bg-white/30\" data-testid=\"share-package\">\n                <Share2 className=\"h-5 w-5 text-white\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"icon\" className=\"bg-white/20 backdrop-blur-sm hover:bg-white/30\" data-testid=\"favorite-package\">\n                <Heart className=\"h-5 w-5 text-white\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Content */}\n      <section className=\"pb-20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-12\">\n            {/* Left Content */}\n            <div className=\"lg:col-span-2\">\n              <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-4 mb-8\" data-testid=\"package-tabs\">\n                  <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n                  <TabsTrigger value=\"itinerary\">Itinerary</TabsTrigger>\n                  <TabsTrigger value=\"inclusions\">Inclusions</TabsTrigger>\n                  <TabsTrigger value=\"reviews\">Reviews</TabsTrigger>\n                </TabsList>\n                \n                <TabsContent value=\"overview\" className=\"space-y-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-4\">\n                        Package Details\n                        <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                          <div className=\"flex items-center\">\n                            <Calendar className=\"h-4 w-4 mr-1\" />\n                            {packageData.duration} Days\n                          </div>\n                          <div className=\"flex items-center\">\n                            <Users className=\"h-4 w-4 mr-1\" />\n                            Max {packageData.maxGuests} Guests\n                          </div>\n                        </div>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-gray-700 leading-relaxed text-lg\">\n                        {packageData.description}\n                      </p>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>What to Expect</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-8 h-8 rounded-full bg-forest/10 flex items-center justify-center flex-shrink-0 mt-1\">\n                            <Clock className=\"h-4 w-4 text-forest\" />\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold text-gray-800\">Duration</h4>\n                            <p className=\"text-gray-600\">{packageData.duration} days of unforgettable adventure</p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-start gap-3\">\n                          <div className=\"w-8 h-8 rounded-full bg-ocean/10 flex items-center justify-center flex-shrink-0 mt-1\">\n                            <Users className=\"h-4 w-4 text-ocean\" />\n                          </div>\n                          <div>\n                            <h4 className=\"font-semibold text-gray-800\">Group Size</h4>\n                            <p className=\"text-gray-600\">Maximum {packageData.maxGuests} travelers for personalized experience</p>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n                \n                <TabsContent value=\"itinerary\" className=\"space-y-4\">\n                  {packageData.itinerary?.map((day: any, index: number) => (\n                    <Card key={index}>\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex gap-4\">\n                          <div className=\"w-12 h-12 rounded-full bg-sunset text-white flex items-center justify-center font-bold flex-shrink-0\">\n                            {day.day}\n                          </div>\n                          <div className=\"flex-1\">\n                            <h3 className=\"font-poppins font-semibold text-xl mb-2\" data-testid={`itinerary-day-${day.day}`}>\n                              Day {day.day}: {day.title}\n                            </h3>\n                            <p className=\"text-gray-700\">{day.description}</p>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  )) || (\n                    <Card>\n                      <CardContent className=\"p-6 text-center text-gray-500\">\n                        Detailed itinerary will be provided upon booking confirmation.\n                      </CardContent>\n                    </Card>\n                  )}\n                </TabsContent>\n                \n                <TabsContent value=\"inclusions\" className=\"space-y-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>What's Included</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        {packageData.inclusions?.map((inclusion: string, index: number) => (\n                          <div key={index} className=\"flex items-center gap-3\">\n                            <Check className=\"h-5 w-5 text-forest flex-shrink-0\" />\n                            <span className=\"text-gray-700\">{inclusion}</span>\n                          </div>\n                        )) || (\n                          <p className=\"text-gray-500\">Inclusions will be detailed upon booking.</p>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n                \n                <TabsContent value=\"reviews\" className=\"space-y-6\">\n                  {/* Review Form */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Share Your Experience</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <form onSubmit={handleReviewSubmit} className=\"space-y-4\" data-testid=\"review-form\">\n                        <div>\n                          <Label htmlFor=\"rating\">Rating</Label>\n                          <Select value={reviewData.rating.toString()} onValueChange={(value) => setReviewData(prev => ({ ...prev, rating: parseInt(value) }))}>\n                            <SelectTrigger data-testid=\"review-rating\">\n                              <SelectValue />\n                            </SelectTrigger>\n                            <SelectContent>\n                              {[5, 4, 3, 2, 1].map((rating) => (\n                                <SelectItem key={rating} value={rating.toString()}>\n                                  {rating} Star{rating !== 1 ? 's' : ''}\n                                </SelectItem>\n                              ))}\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <div>\n                          <Label htmlFor=\"review-title\">Title</Label>\n                          <Input\n                            id=\"review-title\"\n                            value={reviewData.title}\n                            onChange={(e) => setReviewData(prev => ({ ...prev, title: e.target.value }))}\n                            placeholder=\"Summarize your experience\"\n                            data-testid=\"review-title\"\n                          />\n                        </div>\n                        <div>\n                          <Label htmlFor=\"review-comment\">Your Review</Label>\n                          <Textarea\n                            id=\"review-comment\"\n                            value={reviewData.comment}\n                            onChange={(e) => setReviewData(prev => ({ ...prev, comment: e.target.value }))}\n                            placeholder=\"Tell us about your experience...\"\n                            rows={4}\n                            data-testid=\"review-comment\"\n                          />\n                        </div>\n                        <Button \n                          type=\"submit\" \n                          disabled={reviewMutation.isPending}\n                          className=\"bg-forest hover:bg-green-800 text-white\"\n                          data-testid=\"submit-review\"\n                        >\n                          {reviewMutation.isPending ? \"Submitting...\" : \"Submit Review\"}\n                        </Button>\n                      </form>\n                    </CardContent>\n                  </Card>\n\n                  {/* Reviews List */}\n                  {reviewsLoading ? (\n                    <div className=\"space-y-4\">\n                      {Array.from({ length: 3 }).map((_, i) => (\n                        <Card key={i}>\n                          <CardContent className=\"p-6 space-y-3\">\n                            <div className=\"flex items-center gap-4\">\n                              <div className=\"w-12 h-12 bg-gray-200 rounded-full animate-pulse\"></div>\n                              <div className=\"flex-1 space-y-2\">\n                                <div className=\"h-4 bg-gray-200 rounded animate-pulse\"></div>\n                                <div className=\"h-3 bg-gray-200 rounded w-2/3 animate-pulse\"></div>\n                              </div>\n                            </div>\n                            <div className=\"space-y-2\">\n                              <div className=\"h-3 bg-gray-200 rounded animate-pulse\"></div>\n                              <div className=\"h-3 bg-gray-200 rounded w-3/4 animate-pulse\"></div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  ) : reviews && reviews.length > 0 ? (\n                    <div className=\"space-y-4\" data-testid=\"reviews-list\">\n                      {reviews.map((review: any) => (\n                        <Card key={review.id}>\n                          <CardContent className=\"p-6\">\n                            <div className=\"flex items-start gap-4\">\n                              <div className=\"w-12 h-12 bg-gradient-to-r from-forest to-ocean rounded-full flex items-center justify-center text-white font-semibold\">\n                                {review.userId?.charAt(0)?.toUpperCase() || 'U'}\n                              </div>\n                              <div className=\"flex-1\">\n                                <div className=\"flex items-center gap-2 mb-2\">\n                                  <div className=\"flex\">\n                                    {Array.from({ length: 5 }).map((_, i) => (\n                                      <Star\n                                        key={i}\n                                        className={`h-4 w-4 ${\n                                          i < review.rating ? 'text-sunset fill-current' : 'text-gray-300'\n                                        }`}\n                                      />\n                                    ))}\n                                  </div>\n                                  <span className=\"text-sm text-gray-500\">\n                                    {new Date(review.createdAt).toLocaleDateString()}\n                                  </span>\n                                </div>\n                                {review.title && (\n                                  <h4 className=\"font-semibold text-gray-800 mb-2\">{review.title}</h4>\n                                )}\n                                <p className=\"text-gray-700\">{review.comment}</p>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  ) : (\n                    <Card>\n                      <CardContent className=\"p-6 text-center text-gray-500\">\n                        No reviews yet. Be the first to share your experience!\n                      </CardContent>\n                    </Card>\n                  )}\n                </TabsContent>\n              </Tabs>\n            </div>\n\n            {/* Right Sidebar - Booking */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"sticky top-24\">\n                <Card className=\"shadow-xl\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      <span>Book This Package</span>\n                      <div className=\"text-right\">\n                        <div className=\"text-3xl font-bold text-forest\" data-testid=\"package-price\">\n                          ${packageData.price}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">per person</div>\n                      </div>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <form onSubmit={handleBooking} className=\"space-y-4\" data-testid=\"package-booking-form\">\n                      <div>\n                        <Label htmlFor=\"guests\">Number of Travelers</Label>\n                        <Select \n                          value={bookingData.guestCount.toString()} \n                          onValueChange={(value) => setBookingData(prev => ({ ...prev, guestCount: parseInt(value) }))}\n                        >\n                          <SelectTrigger data-testid=\"booking-guests\">\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {Array.from({ length: packageData.maxGuests }, (_, i) => (\n                              <SelectItem key={i + 1} value={(i + 1).toString()}>\n                                {i + 1} Guest{i !== 0 ? 's' : ''}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      \n                      <div>\n                        <Label htmlFor=\"departure\">Departure Date</Label>\n                        <Input\n                          id=\"departure\"\n                          type=\"date\"\n                          value={bookingData.departureDate}\n                          onChange={(e) => setBookingData(prev => ({ ...prev, departureDate: e.target.value }))}\n                          className=\"focus:border-forest\"\n                          data-testid=\"booking-departure\"\n                          required\n                        />\n                      </div>\n                      \n                      <div>\n                        <Label htmlFor=\"requests\">Special Requests</Label>\n                        <Textarea\n                          id=\"requests\"\n                          value={bookingData.specialRequests}\n                          onChange={(e) => setBookingData(prev => ({ ...prev, specialRequests: e.target.value }))}\n                          placeholder=\"Any special requirements...\"\n                          rows={3}\n                          data-testid=\"booking-requests\"\n                        />\n                      </div>\n\n                      {/* Price Breakdown */}\n                      <div className=\"border-t pt-4 space-y-2\">\n                        <div className=\"flex justify-between\">\n                          <span>Package ({bookingData.guestCount} guests)</span>\n                          <span>${(parseFloat(packageData.price) * bookingData.guestCount).toLocaleString()}</span>\n                        </div>\n                        <div className=\"flex justify-between text-sm text-gray-600\">\n                          <span>Travel Insurance</span>\n                          <span>$99</span>\n                        </div>\n                        <div className=\"flex justify-between text-sm text-gray-600\">\n                          <span>Taxes & Fees</span>\n                          <span>${Math.floor(parseFloat(packageData.price) * 0.1)}</span>\n                        </div>\n                        <div className=\"flex justify-between font-bold text-lg pt-2 border-t\">\n                          <span>Total</span>\n                          <span className=\"text-forest\" data-testid=\"booking-total\">\n                            ${calculateTotal().toLocaleString()}\n                          </span>\n                        </div>\n                      </div>\n\n                      <Button \n                        type=\"submit\" \n                        disabled={bookingMutation.isPending}\n                        className=\"w-full bg-forest hover:bg-green-800 text-white py-3 text-lg font-semibold\"\n                        data-testid=\"book-package\"\n                      >\n                        <Lock className=\"mr-2 h-5 w-5\" />\n                        {bookingMutation.isPending ? \"Processing...\" : `Book Now - $${calculateTotal().toLocaleString()}`}\n                      </Button>\n                    </form>\n\n                    <div className=\"mt-6 pt-6 border-t text-center space-y-2\">\n                      <div className=\"flex items-center justify-center gap-4 text-sm text-gray-600\">\n                        <div className=\"flex items-center\">\n                          <Phone className=\"h-4 w-4 mr-1\" />\n                          <span>24/7 Support</span>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <CreditCard className=\"h-4 w-4 mr-1\" />\n                          <span>Secure Payment</span>\n                        </div>\n                      </div>\n                      <p className=\"text-xs text-gray-500\">\n                        Free cancellation up to 48 hours before departure\n                      </p>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Contact Card */}\n                <Card className=\"mt-6\">\n                  <CardContent className=\"p-6 text-center\">\n                    <h3 className=\"font-semibold text-lg mb-4\">Need Help?</h3>\n                    <p className=\"text-gray-600 mb-4\">\n                      Our travel experts are here to help you plan the perfect adventure.\n                    </p>\n                    <div className=\"space-y-2\">\n                      <Button variant=\"outline\" className=\"w-full\" data-testid=\"contact-phone\">\n                        <Phone className=\"h-4 w-4 mr-2\" />\n                        +1 (555) 123-4567\n                      </Button>\n                      <Button variant=\"outline\" className=\"w-full\" data-testid=\"contact-email\">\n                        <Mail className=\"h-4 w-4 mr-2\" />\n                        hello@wanderlust.com\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Related Packages */}\n      {filteredRelatedPackages.length > 0 && (\n        <section className=\"py-20 bg-gray-50\">\n          <div className=\"container mx-auto px-4 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"font-poppins font-bold text-3xl md:text-4xl text-gray-800 mb-4\">\n                Similar Adventures\n              </h2>\n              <p className=\"text-xl text-gray-600\">\n                Discover more amazing {packageData.category} experiences\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\" data-testid=\"related-packages\">\n              {filteredRelatedPackages.map((pkg: any) => (\n                <PackageCard key={pkg.id} package={pkg} />\n              ))}\n            </div>\n          </div>\n        </section>\n      )}\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":28871},"client/src/pages/packages.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport Header from \"@/components/header\";\nimport Footer from \"@/components/footer\";\nimport PackageCard from \"@/components/package-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Search, Filter, Calendar, Users } from \"lucide-react\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\n\nexport default function Packages() {\n  const [location] = useLocation();\n  const [activeFilter, setActiveFilter] = useState(\"all\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [priceRange, setPriceRange] = useState(\"all\");\n  const [duration, setDuration] = useState(\"all\");\n\n  // Parse URL parameters on mount\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.split('?')[1] || '');\n    const category = urlParams.get('category');\n    if (category) {\n      setActiveFilter(category);\n    }\n  }, [location]);\n\n  const { data: packages, isLoading } = useQuery({\n    queryKey: ['/api/packages', { category: activeFilter !== 'all' ? activeFilter : undefined }],\n  });\n\n  const filteredPackages = packages?.filter((pkg: any) => {\n    const matchesSearch = pkg.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         pkg.description.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesPrice = priceRange === \"all\" || \n      (priceRange === \"budget\" && parseInt(pkg.price) < 2000) ||\n      (priceRange === \"mid\" && parseInt(pkg.price) >= 2000 && parseInt(pkg.price) < 4000) ||\n      (priceRange === \"luxury\" && parseInt(pkg.price) >= 4000);\n    \n    const matchesDuration = duration === \"all\" ||\n      (duration === \"short\" && pkg.duration <= 7) ||\n      (duration === \"medium\" && pkg.duration > 7 && pkg.duration <= 14) ||\n      (duration === \"long\" && pkg.duration > 14);\n\n    return matchesSearch && matchesPrice && matchesDuration;\n  }) || [];\n\n  return (\n    <div className=\"min-h-screen bg-warm-white\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"relative py-32 bg-gradient-to-r from-terracotta to-sunset\">\n        <div className=\"container mx-auto px-4 lg:px-8 text-center\">\n          <h1 className=\"font-poppins font-bold text-5xl md:text-6xl text-white mb-6\">\n            Travel Packages\n          </h1>\n          <p className=\"text-xl text-white/90 max-w-3xl mx-auto mb-8\">\n            Curated adventures designed to create unforgettable memories and life-changing experiences\n          </p>\n        </div>\n      </section>\n\n      {/* Filters and Search */}\n      <section className=\"py-8 bg-white border-b\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"flex flex-col lg:flex-row gap-6\">\n            {/* Search */}\n            <div className=\"flex-1 relative\">\n              <Search className=\"absolute left-3 top-3 h-5 w-5 text-gray-400\" />\n              <Input\n                placeholder=\"Search packages...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n                data-testid=\"search-packages\"\n              />\n            </div>\n            \n            {/* Filters */}\n            <div className=\"flex flex-wrap gap-4\">\n              <Select value={priceRange} onValueChange={setPriceRange}>\n                <SelectTrigger className=\"w-40\" data-testid=\"filter-price\">\n                  <SelectValue placeholder=\"Price Range\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Prices</SelectItem>\n                  <SelectItem value=\"budget\">Under $2,000</SelectItem>\n                  <SelectItem value=\"mid\">$2,000 - $4,000</SelectItem>\n                  <SelectItem value=\"luxury\">Over $4,000</SelectItem>\n                </SelectContent>\n              </Select>\n              \n              <Select value={duration} onValueChange={setDuration}>\n                <SelectTrigger className=\"w-40\" data-testid=\"filter-duration\">\n                  <Calendar className=\"h-4 w-4 mr-2\" />\n                  <SelectValue placeholder=\"Duration\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">Any Duration</SelectItem>\n                  <SelectItem value=\"short\">1-7 Days</SelectItem>\n                  <SelectItem value=\"medium\">8-14 Days</SelectItem>\n                  <SelectItem value=\"long\">15+ Days</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Category Filter */}\n      <section className=\"py-8 bg-gray-50\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"flex flex-wrap justify-center gap-4\" data-testid=\"category-filters\">\n            {['all', 'adventure', 'cultural', 'luxury', 'family'].map((filter) => (\n              <Button\n                key={filter}\n                onClick={() => setActiveFilter(filter)}\n                variant={activeFilter === filter ? \"default\" : \"outline\"}\n                className={`rounded-full ${\n                  activeFilter === filter \n                    ? 'bg-forest text-white hover:bg-green-800' \n                    : 'bg-white text-gray-700 hover:bg-gray-100 border-gray-300'\n                }`}\n                data-testid={`category-${filter}`}\n              >\n                {filter.charAt(0).toUpperCase() + filter.slice(1)} \n                {filter === 'all' ? ' Packages' : ''}\n              </Button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Packages Grid */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"mb-8 flex justify-between items-center\">\n            <h2 className=\"font-poppins font-bold text-3xl text-gray-800\">\n              {filteredPackages.length} Packages Found\n            </h2>\n          </div>\n          \n          {isLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {Array.from({ length: 9 }).map((_, i) => (\n                <div key={i} className=\"bg-gray-200 animate-pulse rounded-2xl h-96\"></div>\n              ))}\n            </div>\n          ) : filteredPackages.length === 0 ? (\n            <div className=\"text-center py-16\">\n              <Filter className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-semibold text-gray-600 mb-2\">No packages found</h3>\n              <p className=\"text-gray-500\">Try adjusting your search criteria or filters</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\" data-testid=\"packages-list\">\n              {filteredPackages.map((pkg: any) => (\n                <PackageCard key={pkg.id} package={pkg} />\n              ))}\n            </div>\n          )}\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":7162},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}},"version":1}